[["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\infrastructure\\persistence\\FileUserRepository.test.ts",{"fileContent":"import { FileUserRepository } from '../../../../../../src/Contexts/PIE/Users/infrastructure/persistence/FileUserRepository'\r\nimport { UserMother } from '../../domain/UserMother'\r\n\r\ndescribe('Save User', () => {\r\n  it('should save a user', async () => {\r\n    const repository = new FileUserRepository()\r\n    \r\n    const user = UserMother.random()\r\n\r\n    await repository.save(user)\r\n  })\r\n})\r\n\r\ndescribe('Find User', () => {\r\n  it('should find an existing user', async () => {\r\n    const repository = new FileUserRepository()\r\n\r\n    const expectedUser = UserMother.random()\r\n\r\n    await repository.save(expectedUser)\r\n\r\n    const user = await repository.search(expectedUser.id.value)\r\n    expect(user).toEqual(expectedUser);\r\n  })\r\n})","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/infrastructure/persistence/FileUserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/CreateUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Shared/domain/Users/UserIdMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserFirstNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserLastNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserNICMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserEmailMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserBirthDateMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserPasswordMother.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\infrastructure\\persistence\\UserRepository.test.ts",{"fileContent":"import container from '../../../../../../src/apps/pie/dependency-injection';\r\nimport { UserRepository } from '../../../../../../src/Contexts/PIE/Users/domain/UserRepository';\r\nimport { EnvironmentArranger } from '../../../../Shared/infrastructure/arranger/EnvironmentArranger';\r\nimport { UserMother } from '../../domain/UserMother';\r\n\r\nconst repository: UserRepository = container.get('Pie.Users.domain.UserRepository');\r\nconst environmentArranger: Promise<EnvironmentArranger> = container.get('Pie.EnvironmentArranger');\r\n\r\nbeforeEach(async () => {\r\n  await (await environmentArranger).arrange();\r\n});\r\n\r\nafterAll(async () => {\r\n  await (await environmentArranger).arrange();\r\n  await (await environmentArranger).close();\r\n});\r\n\r\ndescribe('UserRepository', () => {\r\n  describe('#save', () => {\r\n    it('should save a user', async () => {\r\n      const user = UserMother.random();\r\n      await repository.save(user);\r\n    });\r\n  });\r\n});","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/apps/pie/dependency-injection/index.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/infrastructure/arranger/EnvironmentArranger.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/CreateUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Shared/domain/Users/UserIdMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserFirstNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserLastNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserNICMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserEmailMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserBirthDateMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserPasswordMother.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\apps\\pie\\dependency-injection\\index.ts",{"fileContent":"import { ContainerBuilder, YamlFileLoader } from 'node-dependency-injection';\r\nimport path from 'node:path'\r\n\r\nconst container = new ContainerBuilder();\r\nconst loader = new YamlFileLoader(container);\r\nconst env = process.env.NODE_ENV || 'development'\r\n\r\nconst routesPath = path.join(__dirname, `application_${env.trim()}.yaml`).replace(/\\\\/g, '/')\r\n\r\nloader.load(routesPath)\r\n\r\nexport default container","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\apps\\pie\\controllers\\StatusGetController.ts",{"fileContent":"import { Request, Response } from 'express';\r\nimport httpStatus from 'http-status';\r\nimport { Controller } from './Controller';\r\n\r\nexport default class StatusGetController implements Controller {\r\n  async run(_req: Request, res: Response) {\r\n    res.status(httpStatus.OK).send();\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/apps/pie/controllers/Controller.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\apps\\pie\\controllers\\Users\\UserPostController.ts",{"fileContent":"import { Request, Response } from 'express';\r\nimport httpStatus from 'http-status';\r\nimport { UserCreator } from '../../../../Contexts/PIE/Users/application/UserCreator';\r\nimport { Controller } from '../Controller';\r\n\r\ntype UserPostRequest = Request & {\r\n  body: {\r\n    id: number,\r\n    firstName: string,\r\n    lastName: string,\r\n    nic: string,\r\n    email: string,\r\n    password: string,\r\n    birthDate: Date,\r\n    userImage: string | null,\r\n    idRole: number,\r\n    idUserStatus: number,\r\n    idCountry: number,\r\n    createdOn: Date,\r\n    createdBy: number,\r\n    lastModifiedOn: Date | null,\r\n    lastModifiedBy: number | null\r\n  }\r\n}\r\n\r\nexport class UserPostController implements Controller {\r\n  constructor(private userCreator: UserCreator) {}\r\n\r\n  async run(req: UserPostRequest, res: Response) {\r\n    try {\r\n      const { id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy } = req.body;\r\n\r\n      await this.userCreator.run({ id, firstName, lastName, nic, email, password, birthDate, image: userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy });\r\n      \r\n      res.status(httpStatus.CREATED).send();\r\n    } catch (error) {\r\n      res.status(httpStatus.INTERNAL_SERVER_ERROR).send();\r\n    }\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/UserCreator.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/apps/pie/controllers/Controller.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/PasswordOperations.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/CreateUserRequest.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\apps\\pie\\controllers\\Users\\UserLoginController.ts",{"fileContent":"import { Request, Response } from 'express';\r\nimport httpStatus from 'http-status';\r\nimport { Controller } from '../Controller';\r\nimport { UserLogin } from 'src/Contexts/PIE/Users/application/UserLogin';\r\n\r\ntype UserLoginRequest = Request & {\r\n  body: {\r\n    email: string,\r\n    password: string\r\n  }\r\n}\r\n\r\nexport class UserLoginController implements Controller {\r\n  constructor(private userLogin: UserLogin) {}\r\n\r\n  async run(req: UserLoginRequest, res: Response) {\r\n    try {\r\n      const { email, password } = req.body;\r\n\r\n      const user = await this.userLogin.run({ email, password });\r\n      \r\n      res.status(httpStatus.OK).send(JSON.stringify(user));\r\n    } catch (error) {\r\n      res.status(httpStatus.INTERNAL_SERVER_ERROR).send();\r\n    }\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/apps/pie/controllers/Controller.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/UserLogin.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/LoginUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/PasswordOperations.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Shared\\infrastructure\\persistence\\mongo\\MongoConfigFactory.ts",{"fileContent":"import config from '../../config';\r\nimport MongoConfig from '../../../../../Shared/infrastructure/persistence/mongo/MongoConfig';\r\n\r\nconst mongoConfig = {\r\n  url: config.get('mongo.url')\r\n};\r\n\r\nexport class MongoConfigFactory {\r\n  static createConfig(): MongoConfig {\r\n    return mongoConfig;\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/infrastructure/config/index.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/infrastructure/persistence/mongo/MongoConfig.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Shared\\infrastructure\\config\\index.ts",{"fileContent":"import convict from 'convict';\r\nimport path from 'path';\r\nimport dotenv from 'dotenv'\r\n\r\ndotenv.config()\r\n\r\nconst pieConfig = convict({\r\n  env: {\r\n    doc: 'The application environment.',\r\n    format: ['production', 'development', 'staging', 'test'],\r\n    default: 'default',\r\n    env: 'NODE_ENV'\r\n  },\r\n  mongo: {\r\n    url: {\r\n      doc: 'The Mongo connection URL',\r\n      format: String,\r\n      default: process.env.MONGO_URL || \"mongodb+srv://test:test@cluster0.5n3ek.mongodb.net/?retryWrites=true&w=majority\",\r\n      env: process.env.MONGO_URL || \"mongodb+srv://test:test@cluster0.5n3ek.mongodb.net/?retryWrites=true&w=majority\"\r\n    }\r\n  }\r\n});\r\n\r\nconst defaultConfigPath = path.join(__dirname, 'default.json').replace(/\\\\/g, '/')\r\nconst envConfigPath = path.join(__dirname, pieConfig.get('env').trim() + '.json').replace(/\\\\/g, '/')\r\n\r\npieConfig.loadFile([defaultConfigPath, envConfigPath]);\r\n\r\nexport default pieConfig;","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\infrastructure\\persistence\\mongo\\MongoClientFactory.ts",{"fileContent":"import { MongoClient, ServerApiVersion } from 'mongodb';\r\nimport MongoConfig from './MongoConfig';\r\n\r\nexport class MongoClientFactory {\r\n  private static clients: { [key: string]: MongoClient } = {};\r\n\r\n  static async createClient(contextName: string, config: MongoConfig): Promise<MongoClient> {\r\n    let client = MongoClientFactory.getClient(contextName);\r\n\r\n    if (!client) {\r\n      client = await MongoClientFactory.createAndConnectClient(config);\r\n\r\n      MongoClientFactory.registerClient(client, contextName);\r\n    }\r\n\r\n    return client;\r\n  }\r\n\r\n  private static getClient(contextName: string): MongoClient | null {\r\n    return MongoClientFactory.clients[contextName];\r\n  }\r\n\r\n  private static async createAndConnectClient(config: MongoConfig): Promise<MongoClient> {\r\n    const client = new MongoClient(config.url, {\r\n      serverApi: {\r\n        version: ServerApiVersion.v1,\r\n        strict: true,\r\n        deprecationErrors: true,\r\n      },\r\n      ignoreUndefined: true\r\n    });\r\n\r\n    await client.connect()\r\n\r\n    return client;\r\n  }\r\n\r\n  private static registerClient(client: MongoClient, contextName: string): void {\r\n    MongoClientFactory.clients[contextName] = client;\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/infrastructure/persistence/mongo/MongoConfig.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\infrastructure\\persistence\\PrismaUserRepository.ts",{"fileContent":"import { Nullable } from '../../../../Shared/domain/Nullable';\r\nimport { prisma } from '../../../../../../src/Contexts/Shared/infrastructure/persistence/prisma/PrismaClientFactory';\r\nimport { User } from '../../domain/User';\r\nimport { UserId } from '../../../Shared/domain/Users/UserId';\r\nimport { UserRepository } from '../../domain/UserRepository';\r\nimport { UserEmail } from '../../domain/UserEmail';\r\nimport { UserPassword } from '../../domain/UserPassword';\r\nimport { UserFirstName } from '../../domain/UserFirstName';\r\nimport { UserLastName } from '../../domain/UserLastName';\r\nimport { UserNIC } from '../../domain/UserNIC';\r\nimport { UserBirthDate } from '../../domain/UserBirthDate';\r\nimport { UserImage } from '../../domain/UserImage';\r\n\r\nexport class PrismaUserRepository implements UserRepository {\r\n  public async save(user: User): Promise<void> {\r\n    await prisma.users.create({\r\n      data: {\r\n        id: user.id.value,\r\n        first_name: user.firstName.value,\r\n        last_name: user.lastName.value,\r\n        nic: user.nic.value,\r\n        email: user.email.value,\r\n        password: user.password.value,\r\n        birth_date: user.birthDate.value,\r\n        user_image: user.userImage?.value || null,\r\n        id_role: user.idRole,\r\n        id_user_status: user.idUserStatus,\r\n        id_country: user.idCountry,\r\n        created_on: user.createdOn,\r\n        created_by: user.createdBy.value,\r\n        last_modified_on: user.lastModifiedOn || null,\r\n        last_modified_by: user.lastModifiedBy || null\r\n      }\r\n    })\r\n  }\r\n\r\n  public async login(email: UserEmail, password: UserPassword): Promise<Nullable<User>> {\r\n    const user = await prisma.users.findFirst({\r\n      where: {\r\n        email: email.value,\r\n        password: password.value\r\n      }\r\n    });\r\n\r\n    return user !== null ? new User(\r\n      new UserId(user.id),\r\n      new UserFirstName(user.first_name),\r\n      new UserLastName(user.last_name),\r\n      new UserNIC(user.nic),\r\n      new UserEmail(user.email),\r\n      new UserPassword(user.password),\r\n      new UserBirthDate(user.birth_date),\r\n      user.user_image !== null ? new UserImage(user.user_image) : null,\r\n      user.id_role,\r\n      user.id_user_status,\r\n      user.id_country,\r\n      user.created_on,\r\n      new UserId(user.created_by),\r\n      user.last_modified_on,\r\n      user.last_modified_by\r\n    ) : null;\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/infrastructure/persistence/prisma/PrismaClientFactory.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/AggregateRoot.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/BaseEntity.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/NumberValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/DateValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\infrastructure\\persistence\\prisma\\PrismaClientFactory.ts",{"fileContent":"import { PrismaClient } from '@prisma/client'\r\n\r\nexport const prisma = new PrismaClient({\r\n  errorFormat: 'pretty',\r\n  log: [\r\n    {\r\n      emit: 'stdout',\r\n      level: 'query',\r\n    },\r\n    {\r\n      emit: 'stdout',\r\n      level: 'error',\r\n    },\r\n    {\r\n      emit: 'stdout',\r\n      level: 'info',\r\n    },\r\n    {\r\n      emit: 'stdout',\r\n      level: 'warn',\r\n    },\r\n  ]\r\n})","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\User.ts",{"fileContent":"import { AggregateRoot } from \"../../../Shared/domain/AggregateRoot\"\r\nimport { BaseEntity } from \"../../Shared/domain/BaseEntity\"\r\nimport { UserId } from \"../../Shared/domain/Users/UserId\"\r\nimport { UserBirthDate } from \"./UserBirthDate\"\r\nimport { UserEmail } from \"./UserEmail\"\r\nimport { UserFirstName } from \"./UserFirstName\"\r\nimport { UserImage } from \"./UserImage\"\r\nimport { UserLastName } from \"./UserLastName\"\r\nimport { UserNIC } from \"./UserNIC\"\r\nimport { UserPassword } from \"./UserPassword\"\r\n\r\nexport class User extends AggregateRoot implements BaseEntity {\r\n  readonly id: UserId\r\n  readonly firstName: UserFirstName\r\n  readonly lastName: UserLastName\r\n  readonly nic: UserNIC\r\n  readonly email: UserEmail\r\n  readonly password: UserPassword\r\n  readonly birthDate: UserBirthDate\r\n  readonly userImage: UserImage | null\r\n  readonly idRole: number\r\n  readonly idUserStatus: number\r\n  readonly idCountry: number\r\n  readonly createdOn: Date\r\n  readonly createdBy: UserId\r\n  readonly lastModifiedOn: Date | null\r\n  readonly lastModifiedBy: number | null\r\n\r\n  constructor(id: UserId, firstName: UserFirstName, lastName: UserLastName, nic: UserNIC, email: UserEmail, password: UserPassword, birthDate: UserBirthDate, userImage: UserImage | null, idRole: number, idUserStatus: number, idCountry: number, createdOn: Date, createdBy: UserId, lastModifiedOn: Date | null, lastModifiedBy: number | null) {\r\n    super()\r\n    this.id = id\r\n    this.firstName = firstName\r\n    this.lastName = lastName\r\n    this.nic = nic\r\n    this.email = email\r\n    this.password = password\r\n    this.birthDate = birthDate\r\n    this.userImage = userImage\r\n    this.idRole = idRole\r\n    this.idUserStatus = idUserStatus\r\n    this.idCountry = idCountry\r\n    this.createdOn = createdOn\r\n    this.createdBy = createdBy\r\n    this.lastModifiedOn = lastModifiedOn\r\n    this.lastModifiedBy = lastModifiedBy\r\n  }\r\n\r\n  static fromPrimitives(plainData: { id: number; firstName: string; lastName: string, nic: string, email: string, password: string, birthDate: Date, image: string | null, role: number, status: number, country: number, createdOn: Date, createdBy: number, lastModifiedOn: Date | null, lastModifiedBy: number | null }): User {\r\n    return new User(\r\n      new UserId(plainData.id),\r\n      new UserFirstName(plainData.firstName),\r\n      new UserLastName(plainData.lastName),\r\n      new UserNIC(plainData.nic),\r\n      new UserEmail(plainData.email),\r\n      new UserPassword(plainData.password),\r\n      new UserBirthDate(plainData.birthDate),\r\n      plainData.image !== null ? new UserImage(plainData.image) : null,\r\n      plainData.role,\r\n      plainData.status,\r\n      plainData.country,\r\n      plainData.createdOn,\r\n      new UserId(plainData.createdBy),\r\n      plainData.lastModifiedOn,\r\n      plainData.lastModifiedBy\r\n    );\r\n  }\r\n\r\n  toPrimitives(): any {\r\n    return {\r\n      id: this.id.value,\r\n      firstName: this.firstName.value,\r\n      lastName: this.lastName.value,\r\n      nic: this.nic.value,\r\n      email: this.email.value,\r\n      password: this.password.value,\r\n      birthDate: this.birthDate.value,\r\n      userImage: this.userImage?.value || null,\r\n      idRole: this.idRole,\r\n      idUserStatus: this.idUserStatus,\r\n      idCountry: this.idCountry,\r\n      createdOn: this.createdOn,\r\n      createdBy: this.createdBy,\r\n      lastModifiedOn: this.lastModifiedOn || null,\r\n      lastModifiedBy: this.lastModifiedBy || null\r\n    };\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/AggregateRoot.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/BaseEntity.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/NumberValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/DateValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\AggregateRoot.ts",{"fileContent":"export abstract class AggregateRoot {\r\n  abstract toPrimitives(): any;\r\n}","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Shared\\domain\\Users\\UserId.ts",{"fileContent":"import { NumberValueObject } from \"../../../../Shared/domain/value-object/NumberValueObject\";\r\n\r\nexport class UserId extends NumberValueObject {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/NumberValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\value-object\\NumberValueObject.ts",{"fileContent":"import { ValueObject } from \"./ValueObject\";\r\n\r\nexport abstract class NumberValueObject extends ValueObject<number> {\r\n  isBiggerThan(other: NumberValueObject): boolean {\r\n    return this.value > other.value;\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\value-object\\ValueObject.ts",{"fileContent":"import { InvalidArgumentError } from \"./InvalidArgumentError\";\r\n\r\ntype Primitives = String | string | Number | number | Boolean | boolean | Date;\r\n\r\nexport abstract class ValueObject<T extends Primitives> {\r\n  readonly value: T;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n    this.ensureValueIsDefined(value);\r\n  }\r\n\r\n  private ensureValueIsDefined(value: T): void {\r\n    if (value === null || value === undefined) {\r\n      throw new InvalidArgumentError('Value must be defined');\r\n    }\r\n  }\r\n\r\n  equals(other: ValueObject<T>): boolean {\r\n    return other.constructor.name === this.constructor.name && other.value === this.value;\r\n  }\r\n\r\n  toString(): string  {\r\n      return this.value.toString();\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\value-object\\InvalidArgumentError.ts",{"fileContent":"export class InvalidArgumentError extends Error {}","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserBirthDate.ts",{"fileContent":"import { DateValueObject } from '../../../Shared/domain/value-object/DateValueObject';\r\n\r\nexport class UserBirthDate extends DateValueObject {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/DateValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\value-object\\DateValueObject.ts",{"fileContent":"import { ValueObject } from \"./ValueObject\";\r\n\r\nexport abstract class DateValueObject extends ValueObject<Date> {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserEmail.ts",{"fileContent":"import { StringValueObject } from '../../../Shared/domain/value-object/StringValueObject';\r\n\r\nexport class UserEmail extends StringValueObject {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\value-object\\StringValueObject.ts",{"fileContent":"import { ValueObject } from \"./ValueObject\";\r\n\r\nexport abstract class StringValueObject extends ValueObject<string> {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserFirstName.ts",{"fileContent":"import { StringValueObject } from '../../../Shared/domain/value-object/StringValueObject';\r\nimport { UserFirstLastNameLengthExceeded } from './UserFirstLastNameLengthExceeded';\r\n\r\nexport class UserFirstName extends StringValueObject {\r\n  constructor(value: string) {\r\n    super(value);\r\n    this.ensureLengthIsLessThan30Characters(value);\r\n  }\r\n\r\n  private ensureLengthIsLessThan30Characters(value: string): void {\r\n    if (value.length > 30) {\r\n      throw new UserFirstLastNameLengthExceeded(`The User first name <${value}> has more than 30 characters`);\r\n    }\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserFirstLastNameLengthExceeded.ts",{"fileContent":"import { InvalidArgumentError } from \"../../../Shared/domain/value-object/InvalidArgumentError\";\r\n\r\nexport class UserFirstLastNameLengthExceeded extends InvalidArgumentError {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserImage.ts",{"fileContent":"import { StringValueObject } from '../../../Shared/domain/value-object/StringValueObject';\r\n\r\nexport class UserImage extends StringValueObject {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserLastName.ts",{"fileContent":"import { StringValueObject } from '../../../Shared/domain/value-object/StringValueObject';\r\nimport { UserFirstLastNameLengthExceeded } from './UserFirstLastNameLengthExceeded';\r\n\r\nexport class UserLastName extends StringValueObject {\r\n  constructor(value: string) {\r\n    super(value);\r\n    this.ensureLengthIsLessThan30Characters(value);\r\n  }\r\n\r\n  private ensureLengthIsLessThan30Characters(value: string): void {\r\n    if (value.length > 30) {\r\n      throw new UserFirstLastNameLengthExceeded(`The User last name <${value}> has more than 30 characters`);\r\n    }\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserNIC.ts",{"fileContent":"import { StringValueObject } from '../../../Shared/domain/value-object/StringValueObject';\r\n\r\nexport class UserNIC extends StringValueObject {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\UserPassword.ts",{"fileContent":"import { StringValueObject } from '../../../Shared/domain/value-object/StringValueObject';\r\n\r\nexport class UserPassword extends StringValueObject {}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/ValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\application\\UserCreator.ts",{"fileContent":"import { UserId } from '../../Shared/domain/Users/UserId';\r\nimport { User } from '../domain/User';\r\nimport { UserBirthDate } from '../domain/UserBirthDate';\r\nimport { UserEmail } from '../domain/UserEmail';\r\nimport { UserFirstName } from '../domain/UserFirstName';\r\nimport { UserImage } from '../domain/UserImage';\r\nimport { UserLastName } from '../domain/UserLastName';\r\nimport { UserNIC } from '../domain/UserNIC';\r\nimport { UserPassword } from '../domain/UserPassword';\r\nimport { UserRepository } from '../domain/UserRepository';\r\nimport { passwordEncrypted } from './PasswordOperations';\r\nimport { CreateUserRequest } from './Request/CreateUserRequest';\r\n\r\nexport class UserCreator {\r\n  constructor(private repository: UserRepository) {}\r\n\r\n  async run(request: CreateUserRequest) {\r\n    request.password = passwordEncrypted(request.password)\r\n\r\n    const user = new User(\r\n      new UserId(request.id),\r\n      new UserFirstName(request.firstName),\r\n      new UserLastName(request.lastName),\r\n      new UserNIC(request.nic),\r\n      new UserEmail(request.email),\r\n      new UserPassword(request.password),\r\n      new UserBirthDate(request.birthDate),\r\n      request.image === null ? null : new UserImage(request.image),\r\n      request.idRole,\r\n      request.idUserStatus,\r\n      request.idCountry,\r\n      new Date(request.createdOn),\r\n      new UserId(request.id),\r\n      null,\r\n      null\r\n    )\r\n    \r\n    return this.repository.save(user);\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/PasswordOperations.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/CreateUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/NumberValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/AggregateRoot.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/BaseEntity.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/DateValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\application\\PasswordOperations.ts",{"fileContent":"import CryptoJS from \"crypto-js\"\r\n\r\nexport const passwordEncrypted = (value: string) => {\r\n  return CryptoJS.SHA3(value).toString()\r\n};","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\application\\UserLogin.ts",{"fileContent":"import { UserEmail } from '../domain/UserEmail';\r\nimport { UserPassword } from '../domain/UserPassword';\r\nimport { UserRepository } from '../domain/UserRepository';\r\nimport { LoginUserRequest } from './Request/LoginUserRequest';\r\nimport { passwordEncrypted } from './PasswordOperations';\r\n\r\nexport class UserLogin {\r\n  constructor(private repository: UserRepository) {}\r\n\r\n  async run(request: LoginUserRequest) {\r\n    return this.repository.login(new UserEmail(request.email), new UserPassword(passwordEncrypted(request.password)));\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/LoginUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/PasswordOperations.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\infrastructure\\mongo\\MongoEnvironmentArranger.ts",{"fileContent":"import { MongoClient } from 'mongodb';\r\nimport { EnvironmentArranger } from '../arranger/EnvironmentArranger';\r\n\r\nexport class MongoEnvironmentArranger extends EnvironmentArranger {\r\n  constructor(private _client: Promise<MongoClient>) {\r\n    super();\r\n  }\r\n\r\n  public async arrange(): Promise<void> {\r\n    await this.cleanDatabase();\r\n  }\r\n\r\n  protected async cleanDatabase(): Promise<void> {\r\n    const collections = await this.collections();\r\n    const client = await this.client();\r\n\r\n    for (const collection of collections) {\r\n      await client.db().collection(collection).deleteMany({});\r\n    }\r\n  }\r\n\r\n  private async collections(): Promise<string[]> {\r\n    const client = await this.client();\r\n    const collections = await client.db().listCollections(undefined, { nameOnly: true }).toArray();\r\n\r\n    return collections.map(collection => collection.name);\r\n  }\r\n\r\n  protected client(): Promise<MongoClient> {\r\n    return this._client;\r\n  }\r\n\r\n  public async close(): Promise<void> {\r\n    return (await this.client()).close();\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/infrastructure/arranger/EnvironmentArranger.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\infrastructure\\arranger\\EnvironmentArranger.ts",{"fileContent":"export abstract class EnvironmentArranger {\r\n  public abstract arrange(): Promise<void>;\r\n\r\n  public abstract close(): Promise<void>;\r\n}","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\domain\\UserMother.ts",{"fileContent":"import { CreateUserRequest } from '../../../../../src/Contexts/PIE/Users/application/Request/CreateUserRequest'\r\nimport { User } from '../../../../../src/Contexts/PIE/Users/domain/User'\r\nimport { UserId } from '../../../../../src/Contexts/PIE/Shared/domain/Users/UserId';\r\nimport { UserFirstName } from '../../../../../src/Contexts/PIE/Users/domain/UserFirstName';\r\nimport { UserLastName } from '../../../../../src/Contexts/PIE/Users/domain/UserLastName';\r\nimport { UserNIC } from '../../../../../src/Contexts/PIE/Users/domain/UserNIC';\r\nimport { UserEmail } from '../../../../../src/Contexts/PIE/Users/domain/UserEmail';\r\nimport { UserBirthDate } from '../../../../../src/Contexts/PIE/Users/domain/UserBirthDate';\r\nimport { UserImage } from '../../../../../src/Contexts/PIE/Users/domain/UserImage';\r\nimport { UserIdMother } from '../../Shared/domain/Users/UserIdMother'\r\nimport { UserFirstNameMother } from './UserFirstNameMother';\r\nimport { UserLastNameMother } from './UserLastNameMother';\r\nimport { UserNICMother } from './UserNICMother';\r\nimport { UserEmailMother } from './UserEmailMother';\r\nimport { UserBirthDateMother } from './UserBirthDateMother';\r\nimport { UserPassword } from 'src/Contexts/PIE/Users/domain/UserPassword';\r\nimport { UserPasswordMother } from './UserPasswordMother';\r\n\r\nexport class UserMother {\r\n  static create(\r\n    id: UserId,\r\n    firstName: UserFirstName,\r\n    lastName: UserLastName,\r\n    nic: UserNIC,\r\n    email: UserEmail,\r\n    password: UserPassword,\r\n    birthDate: UserBirthDate,\r\n    userImage: UserImage | null,\r\n    idRole: number,\r\n    idUserStatus: number,\r\n    idCountry: number,\r\n    createdOn: Date,\r\n    createdBy: UserId,\r\n    lastModifiedOn: Date | null,\r\n    lastModifiedBy: number | null): User {\r\n    return new User(id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy);\r\n  }\r\n\r\n  static fromRequest(request: CreateUserRequest): User {\r\n    return this.create(\r\n      UserIdMother.create(request.id),\r\n      UserFirstNameMother.create(request.firstName),\r\n      UserLastNameMother.create(request.lastName),\r\n      UserNICMother.create(request.nic),\r\n      UserEmailMother.create(request.email),\r\n      UserPasswordMother.create(request.password),\r\n      UserBirthDateMother.create(request.birthDate),\r\n      request.image !== null ? new UserImage(request.image) : null,\r\n      request.idRole,\r\n      request.idUserStatus,\r\n      request.idCountry,\r\n      request.createdOn,\r\n      UserIdMother.create(request.createdBy),\r\n      request.lastModifiedOn,\r\n      request.lastModifiedBy\r\n    );\r\n  }\r\n\r\n  static random(): User {\r\n    let id = UserIdMother.random()\r\n\r\n    return this.create(\r\n      id,\r\n      UserFirstNameMother.random(),\r\n      UserLastNameMother.random(),\r\n      UserNICMother.random(),\r\n      UserEmailMother.random(),\r\n      UserPasswordMother.random(),\r\n      UserBirthDateMother.random(),\r\n      null,\r\n      4,\r\n      1,\r\n      1,\r\n      new Date(),\r\n      id,\r\n      null,\r\n      null\r\n    );\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/CreateUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Shared/domain/Users/UserIdMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserFirstNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserLastNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserNICMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserEmailMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserBirthDateMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserPasswordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/AggregateRoot.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/BaseEntity.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/NumberValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/DateValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/NumberMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/WordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/DateMother.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Shared\\domain\\Users\\UserIdMother.ts",{"fileContent":"import { UserId } from '../../../../../../src/Contexts/PIE/Shared/domain/Users/UserId';\r\nimport { NumberMother } from '../../../../Shared/domain/NumberMother'\r\n\r\nexport class UserIdMother {\r\n  static create(value: number): UserId {\r\n    return new UserId(value);\r\n  }\r\n  static random(): UserId {\r\n    return this.create(NumberMother.random());\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/NumberMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/NumberValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\domain\\NumberMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\r\n\r\nexport class NumberMother {\r\n  static random(): number {\r\n    return MotherCreator.random().datatype.number({ min: 1, max: 500 });\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\domain\\MotherCreator.ts",{"fileContent":"import * as faker from 'faker';\r\n\r\nexport class MotherCreator {\r\n  static random(): Faker.FakerStatic {\r\n    return faker;\r\n  }\r\n}","resolvedModuleNames":[]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\domain\\UserFirstNameMother.ts",{"fileContent":"import { UserFirstName } from '../../../../../src/Contexts/PIE/Users/domain/UserFirstName';\r\nimport { WordMother } from '../../../Shared/domain/WordMother';\r\n\r\nexport class UserFirstNameMother {\r\n  static create(value: string): UserFirstName {\r\n    return new UserFirstName(value);\r\n  }\r\n\r\n  static random(): UserFirstName {\r\n    return this.create(WordMother.random({ maxLength: 20 }));\r\n  }\r\n\r\n  static invalidName(): string {\r\n    return \"a\".repeat(40);\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/WordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\domain\\WordMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\r\n\r\nexport class WordMother {\r\n  static random({ minLength = 1, maxLength }: { minLength?: number; maxLength: number }): string {\r\n    return MotherCreator.random().lorem.word(Math.floor(Math.random() * (maxLength - minLength)) + minLength) || 'word';\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\domain\\UserLastNameMother.ts",{"fileContent":"import { UserLastName } from '../../../../../src/Contexts/PIE/Users/domain/UserLastName';\r\nimport { WordMother } from '../../../Shared/domain/WordMother';\r\n\r\nexport class UserLastNameMother {\r\n  static create(value: string): UserLastName {\r\n    return new UserLastName(value);\r\n  }\r\n\r\n  static random(): UserLastName {\r\n    return this.create(WordMother.random({ maxLength: 20 }));\r\n  }\r\n\r\n  static invalidName(): string {\r\n    return \"a\".repeat(40);\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/WordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\domain\\UserNICMother.ts",{"fileContent":"import { UserNIC } from '../../../../../src/Contexts/PIE/Users/domain/UserNIC';\r\nimport { WordMother } from '../../../Shared/domain/WordMother';\r\n\r\nexport class UserNICMother {\r\n  static create(value: string): UserNIC {\r\n    return new UserNIC(value);\r\n  }\r\n\r\n  static random(): UserNIC {\r\n    return this.create(WordMother.random({ maxLength: 11 }));\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/WordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\domain\\UserEmailMother.ts",{"fileContent":"import { UserEmail } from '../../../../../src/Contexts/PIE/Users/domain/UserEmail';\r\nimport { WordMother } from '../../../Shared/domain/WordMother';\r\n\r\nexport class UserEmailMother {\r\n  static create(value: string): UserEmail {\r\n    return new UserEmail(value);\r\n  }\r\n\r\n  static random(): UserEmail {\r\n    return this.create(WordMother.random({ maxLength: 30 }));\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/WordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\domain\\UserBirthDateMother.ts",{"fileContent":"import { UserBirthDate } from '../../../../../src/Contexts/PIE/Users/domain/UserBirthDate';\r\nimport { DateMother } from '../../../Shared/domain/DateMother';\r\n\r\nexport class UserBirthDateMother {\r\n  static create(value: Date): UserBirthDate {\r\n    return new UserBirthDate(value);\r\n  }\r\n\r\n  static random(): UserBirthDate {\r\n    return this.create(DateMother.random());\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/DateMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/DateValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\domain\\DateMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\r\n\r\nexport class DateMother {\r\n  static random(): Date {\r\n    return MotherCreator.random().datatype.datetime();\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\domain\\UserPasswordMother.ts",{"fileContent":"import { UserPassword } from '../../../../../src/Contexts/PIE/Users/domain/UserPassword';\r\nimport { WordMother } from '../../../Shared/domain/WordMother';\r\n\r\nexport class UserPasswordMother {\r\n  static create(value: string): UserPassword {\r\n    return new UserPassword(value);\r\n  }\r\n\r\n  static random(): UserPassword {\r\n    return this.create(WordMother.random({ maxLength: 30 }));\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/WordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/MotherCreator.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\infrastructure\\MongoClientFactory.test.ts",{"fileContent":"import { MongoClientFactory } from '../../../../src/Contexts/Shared/infrastructure/persistence/mongo/MongoClientFactory';\r\nimport { MongoClient } from 'mongodb';\r\n\r\ndescribe('MongoClientFactory', () => {\r\n  const factory = MongoClientFactory;\r\n  let client: MongoClient;\r\n\r\n  beforeEach(async () => {\r\n    client = await factory.createClient('test', { url: 'mongodb+srv://test:test@cluster0.5n3ek.mongodb.net/?retryWrites=true&w=majority' });\r\n  });\r\n\r\n  afterEach(async () => {\r\n    await client.close();\r\n  });\r\n\r\n  it('creates a new client with the connection already established', () => {\r\n    expect(client).toBeInstanceOf(MongoClient);\r\n  });\r\n\r\n  it('creates a new client if it does not exist a client with the given name', async () => {\r\n    const newClient = await factory.createClient('test2', { url: 'mongodb+srv://test:test@cluster0.5n3ek.mongodb.net/?retryWrites=true&w=majority' });\r\n\r\n    expect(newClient).not.toBe(client);\r\n\r\n    await newClient.close();\r\n  });\r\n\r\n  it('returns a client if it already exists', async () => {\r\n    const newClient = await factory.createClient('test', { url: 'mongodb+srv://test:test@cluster0.5n3ek.mongodb.net/?retryWrites=true&w=majority' });\r\n\r\n    expect(newClient).toBe(client);\r\n\r\n    await newClient.close();\r\n  });\r\n});","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/infrastructure/persistence/mongo/MongoClientFactory.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/infrastructure/persistence/mongo/MongoConfig.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\application\\UserCreator.test.ts",{"fileContent":"import { UserCreator } from '../../../../../src/Contexts/PIE/Users/application/UserCreator'\r\nimport { UserMother } from '../../../PIE/Users/domain/UserMother'\r\nimport { UserFirstLastNameLengthExceeded } from '../../../../../src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded'\r\nimport { UserRepositoryMock } from '../__mocks__/UserRepositoryMock'\r\nimport { CreateUserRequestMother } from './CreateUserRequestMother'\r\n\r\nlet repository: UserRepositoryMock\r\nlet creator: UserCreator\r\n\r\nbeforeEach(() => {\r\n  repository = new UserRepositoryMock()\r\n  creator = new UserCreator(repository)\r\n})\r\n\r\ndescribe('UserCreator', () => {\r\n  it('should create a valid user', async () => {\r\n    const request = CreateUserRequestMother.random()\r\n\r\n    await creator.run(request)\r\n\r\n    const user = UserMother.fromRequest(request)\r\n\r\n    repository.assertSaveHaveBeenCalledWith(user)\r\n  });\r\n\r\n  it('should throw error if user first name length is exceeded', async () => {\r\n    expect(() => {\r\n      const request = CreateUserRequestMother.invalidRequest()\r\n\r\n      const user = UserMother.fromRequest(request)\r\n\r\n      creator.run(request)\r\n\r\n      repository.assertSaveHaveBeenCalledWith(user);\r\n    }).toThrow(UserFirstLastNameLengthExceeded);\r\n  });\r\n});","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/UserCreator.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/__mocks__/UserRepositoryMock.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/application/CreateUserRequestMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/PasswordOperations.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/CreateUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Shared/domain/Users/UserIdMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserFirstNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserLastNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserNICMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserEmailMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserBirthDateMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserPasswordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/InvalidArgumentError.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\__mocks__\\UserRepositoryMock.ts",{"fileContent":"import { UserEmail } from \"src/Contexts/PIE/Users/domain/UserEmail\";\r\nimport { User } from \"../../../../../src/Contexts/PIE/Users/domain/User\";\r\nimport { UserRepository } from \"../../../../../src/Contexts/PIE/Users/domain/UserRepository\";\r\nimport { UserPassword } from \"src/Contexts/PIE/Users/domain/UserPassword\";\r\nimport { Nullable } from \"src/Contexts/Shared/domain/Nullable\";\r\n\r\nexport class UserRepositoryMock implements UserRepository {\r\n  private saveMock: jest.Mock;\r\n\r\n  constructor() {\r\n    this.saveMock = jest.fn();\r\n  }\r\n\r\n  async save(user: User): Promise<void> {\r\n    this.saveMock(user);\r\n  }\r\n\r\n  async login(_email: UserEmail, _password: UserPassword): Promise<Nullable<User>> {\r\n    return null\r\n  }\r\n\r\n  assertSaveHaveBeenCalledWith(expected: User): void {\r\n    expect(this.saveMock).toHaveBeenCalledWith(expected);\r\n  }\r\n\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/AggregateRoot.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/BaseEntity.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\PIE\\Users\\application\\CreateUserRequestMother.ts",{"fileContent":"import { UserIdMother } from '../../Shared/domain/Users/UserIdMother'\r\nimport { CreateUserRequest } from '../../../../../src/Contexts/PIE/Users/application/Request/CreateUserRequest';\r\nimport { UserId } from '../../../../../src/Contexts/PIE/Shared/domain/Users/UserId';\r\nimport { UserFirstName } from '../../../../../src/Contexts/PIE/Users/domain/UserFirstName';\r\nimport { UserLastName } from '../../../../../src/Contexts/PIE/Users/domain/UserLastName';\r\nimport { UserNIC } from '../../../../../src/Contexts/PIE/Users/domain/UserNIC';\r\nimport { UserEmail } from '../../../../../src/Contexts/PIE/Users/domain/UserEmail';\r\nimport { UserBirthDate } from '../../../../../src/Contexts/PIE/Users/domain/UserBirthDate';\r\nimport { UserImage } from '../../../../../src/Contexts/PIE/Users/domain/UserImage';\r\nimport { UserFirstNameMother } from '../domain/UserFirstNameMother';\r\nimport { UserLastNameMother } from '../domain/UserLastNameMother';\r\nimport { UserNICMother } from '../domain/UserNICMother';\r\nimport { UserEmailMother } from '../domain/UserEmailMother';\r\nimport { UserBirthDateMother } from '../domain/UserBirthDateMother';\r\nimport { UserPassword } from 'src/Contexts/PIE/Users/domain/UserPassword';\r\nimport { UserPasswordMother } from '../domain/UserPasswordMother';\r\n\r\nexport class CreateUserRequestMother {\r\n  static create(\r\n    id: UserId,\r\n    firstName: UserFirstName,\r\n    lastName: UserLastName,\r\n    nic: UserNIC,\r\n    email: UserEmail,\r\n    password: UserPassword,\r\n    birthDate: UserBirthDate,\r\n    userImage: UserImage | null,\r\n    idRole: number,\r\n    idUserStatus: number,\r\n    idCountry: number,\r\n    createdOn: Date,\r\n    lastModifiedOn: null,\r\n    lastModifiedBy: null): CreateUserRequest {\r\n    return {\r\n      id: id.value,\r\n      firstName: firstName.value,\r\n      lastName: lastName.value,\r\n      nic: nic.value,\r\n      email: email.value,\r\n      password: password.value,\r\n      birthDate: birthDate.value,\r\n      image: userImage === null ? null : userImage.value,\r\n      idRole: idRole,\r\n      idUserStatus: idUserStatus,\r\n      idCountry: idCountry,\r\n      createdOn: createdOn,\r\n      createdBy: id.value,\r\n      lastModifiedOn: lastModifiedOn,\r\n      lastModifiedBy: lastModifiedBy\r\n    };\r\n  }\r\n\r\n  static random(): CreateUserRequest {\r\n    let id = UserIdMother.random()\r\n    return this.create(\r\n      id,\r\n      UserFirstNameMother.random(),\r\n      UserLastNameMother.random(),\r\n      UserNICMother.random(),\r\n      UserEmailMother.random(),\r\n      UserPasswordMother.random(),\r\n      UserBirthDateMother.random(),\r\n      null,\r\n      4,\r\n      1,\r\n      1,\r\n      new Date(),\r\n      null,\r\n      null\r\n    )\r\n  }\r\n\r\n  static invalidRequest(): CreateUserRequest {\r\n    let id = UserIdMother.random().value\r\n    return {\r\n      id: id,\r\n      firstName: UserFirstNameMother.invalidName(),\r\n      lastName: UserLastNameMother.random().value,\r\n      nic: UserNICMother.random().value,\r\n      email: UserEmailMother.random().value,\r\n      password: UserPasswordMother.random().value,\r\n      birthDate: UserBirthDateMother.random().value,\r\n      image: null,\r\n      idRole: 4,\r\n      idUserStatus: 1,\r\n      idCountry: 1,\r\n      createdOn: new Date(),\r\n      createdBy: id,\r\n      lastModifiedOn: null,\r\n      lastModifiedBy: null\r\n    };\r\n  }\r\n}\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Shared/domain/Users/UserIdMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/application/Request/CreateUserRequest.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserFirstNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserLastNameMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserNICMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserEmailMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserBirthDateMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/PIE/Users/domain/UserPasswordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/NumberMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/NumberValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstLastNameLengthExceeded.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/DateValueObject.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/WordMother.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/domain/DateMother.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\infrastructure\\PrismaClientFactory.test.ts",{"fileContent":"import { prisma } from '../../../../src/Contexts/Shared/infrastructure/persistence/prisma/PrismaClientFactory';\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\ndescribe('PrismaClientFactory', () => {\r\n  it('uses the client with the connection already established', () => {\r\n    expect(prisma).toBeInstanceOf(PrismaClient)\r\n    expect(prisma).toBeTruthy()\r\n  });\r\n});","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/infrastructure/persistence/prisma/PrismaClientFactory.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\infrastructure\\persistence\\FileUserRepository.ts",{"fileContent":"import { serialize, deserialize } from 'bson';\r\nimport fs from 'fs';\r\nimport { User } from '../../domain/User';\r\nimport { UserRepository } from '../../domain/UserRepository';\r\nimport path from 'path';\r\nimport { Nullable } from 'src/Contexts/Shared/domain/Nullable';\r\nimport { UserPassword } from '../../domain/UserPassword';\r\nimport { UserEmail } from '../../domain/UserEmail';\r\n\r\nexport class FileUserRepository implements UserRepository {\r\n  private FILE_PATH = path.join(__dirname,'users').replace(/\\\\/g, '/')\r\n\r\n  async save(user: User): Promise<void> {\r\n    await fs.promises.writeFile(this.filePath(user.id.value), serialize(user));\r\n  }\r\n\r\n  async search(userId: number): Promise<User> {\r\n    const userData = await fs.promises.readFile(this.filePath(userId));\r\n    \r\n    const { id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy } = deserialize(userData);\r\n\r\n    return new User(id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy);\r\n  }\r\n\r\n  async login(_email: UserEmail, _password: UserPassword): Promise<Nullable<User>> {\r\n    // const userData = await fs.promises.readFile(this.filePath(userId));\r\n    \r\n    // const { id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy } = deserialize(userData);\r\n\r\n    // return new User(id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy);\r\n    return null\r\n  }\r\n\r\n  private filePath(id: number): string {\r\n    return `${this.FILE_PATH}.${id}.repo`;\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/User.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserRepository.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/Nullable.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserPassword.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserEmail.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/AggregateRoot.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/BaseEntity.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Shared/domain/Users/UserId.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserBirthDate.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserFirstName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserImage.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserLastName.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/PIE/Users/domain/UserNIC.ts","C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/domain/value-object/StringValueObject.ts"]}],["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\infrastructure\\prisma\\PrismaEnvironmentArranger.ts",{"fileContent":"import { prisma } from '../../../../../src/Contexts/Shared/infrastructure/persistence/prisma/PrismaClientFactory';\r\nimport { EnvironmentArranger } from '../arranger/EnvironmentArranger';\r\n\r\nexport class PrismaEnvironmentArranger extends EnvironmentArranger {\r\n  public async arrange(): Promise<void> {\r\n    await this.cleanDatabase();\r\n  }\r\n\r\n  protected async cleanDatabase(): Promise<void> {\r\n    const tableNames = await prisma.$queryRaw<string[]>`SELECT table_name\r\n                                                        FROM information_schema.tables\r\n                                                        WHERE table_schema='public'\r\n                                                        AND table_type='BASE TABLE'\r\n                                                        AND table_name NOT LIKE '\\_%'`\r\n\r\n    for (const tableName of tableNames) {\r\n      await prisma.$queryRaw`TRUNCATE TABLE ${tableName}`\r\n    }\r\n  }\r\n\r\n  public async close(): Promise<void> {\r\n    return await prisma.$disconnect();\r\n  }\r\n}","resolvedModuleNames":["C:/Users/epatr/projects/ExchangeNest-Backend/src/Contexts/Shared/infrastructure/persistence/prisma/PrismaClientFactory.ts","C:/Users/epatr/projects/ExchangeNest-Backend/tests/Contexts/Shared/infrastructure/arranger/EnvironmentArranger.ts"]}]]