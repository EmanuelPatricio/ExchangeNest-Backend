36d800afbad7f4c80ec3e5ab36a6b7a9
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserMother = void 0;
const User_1 = require("../../../../../src/Contexts/PIE/Users/domain/User");
const UserImage_1 = require("../../../../../src/Contexts/PIE/Users/domain/UserImage");
const UserIdMother_1 = require("../../Shared/domain/Users/UserIdMother");
const UserFirstNameMother_1 = require("./UserFirstNameMother");
const UserLastNameMother_1 = require("./UserLastNameMother");
const UserNICMother_1 = require("./UserNICMother");
const UserEmailMother_1 = require("./UserEmailMother");
const UserBirthDateMother_1 = require("./UserBirthDateMother");
const UserPasswordMother_1 = require("./UserPasswordMother");
class UserMother {
    static create(id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy) {
        return new User_1.User(id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy);
    }
    static fromRequest(request) {
        return this.create(UserIdMother_1.UserIdMother.create(request.id), UserFirstNameMother_1.UserFirstNameMother.create(request.firstName), UserLastNameMother_1.UserLastNameMother.create(request.lastName), UserNICMother_1.UserNICMother.create(request.nic), UserEmailMother_1.UserEmailMother.create(request.email), UserPasswordMother_1.UserPasswordMother.create(request.password), UserBirthDateMother_1.UserBirthDateMother.create(request.birthDate), request.image !== null ? new UserImage_1.UserImage(request.image) : null, request.idRole, request.idUserStatus, request.idCountry, request.createdOn, UserIdMother_1.UserIdMother.create(request.createdBy), request.lastModifiedOn, request.lastModifiedBy);
    }
    static random() {
        let id = UserIdMother_1.UserIdMother.random();
        return this.create(id, UserFirstNameMother_1.UserFirstNameMother.random(), UserLastNameMother_1.UserLastNameMother.random(), UserNICMother_1.UserNICMother.random(), UserEmailMother_1.UserEmailMother.random(), UserPasswordMother_1.UserPasswordMother.random(), UserBirthDateMother_1.UserBirthDateMother.random(), null, 4, 1, 1, new Date(), id, null, null);
    }
}
exports.UserMother = UserMother;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxlcGF0clxccHJvamVjdHNcXEV4Y2hhbmdlTmVzdC1CYWNrZW5kXFx0ZXN0c1xcQ29udGV4dHNcXFBJRVxcVXNlcnNcXGRvbWFpblxcVXNlck1vdGhlci50cyIsIm1hcHBpbmdzIjoiOzs7QUFDQSw0RUFBd0U7QUFPeEUsc0ZBQW1GO0FBQ25GLHlFQUFxRTtBQUNyRSwrREFBNEQ7QUFDNUQsNkRBQTBEO0FBQzFELG1EQUFnRDtBQUNoRCx1REFBb0Q7QUFDcEQsK0RBQTREO0FBRTVELDZEQUEwRDtBQUUxRCxNQUFhLFVBQVU7SUFDckIsTUFBTSxDQUFDLE1BQU0sQ0FDWCxFQUFVLEVBQ1YsU0FBd0IsRUFDeEIsUUFBc0IsRUFDdEIsR0FBWSxFQUNaLEtBQWdCLEVBQ2hCLFFBQXNCLEVBQ3RCLFNBQXdCLEVBQ3hCLFNBQTJCLEVBQzNCLE1BQWMsRUFDZCxZQUFvQixFQUNwQixTQUFpQixFQUNqQixTQUFlLEVBQ2YsU0FBaUIsRUFDakIsY0FBMkIsRUFDM0IsY0FBNkI7UUFDN0IsT0FBTyxJQUFJLFdBQUksQ0FBQyxFQUFFLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsY0FBYyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQzlLLENBQUM7SUFFRCxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQTBCO1FBQzNDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FDaEIsMkJBQVksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUMvQix5Q0FBbUIsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUM3Qyx1Q0FBa0IsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUMzQyw2QkFBYSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQ2pDLGlDQUFlLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFDckMsdUNBQWtCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDM0MseUNBQW1CLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFDN0MsT0FBTyxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUkscUJBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFDNUQsT0FBTyxDQUFDLE1BQU0sRUFDZCxPQUFPLENBQUMsWUFBWSxFQUNwQixPQUFPLENBQUMsU0FBUyxFQUNqQixPQUFPLENBQUMsU0FBUyxFQUNqQiwyQkFBWSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQ3RDLE9BQU8sQ0FBQyxjQUFjLEVBQ3RCLE9BQU8sQ0FBQyxjQUFjLENBQ3ZCLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQU07UUFDWCxJQUFJLEVBQUUsR0FBRywyQkFBWSxDQUFDLE1BQU0sRUFBRSxDQUFBO1FBRTlCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FDaEIsRUFBRSxFQUNGLHlDQUFtQixDQUFDLE1BQU0sRUFBRSxFQUM1Qix1Q0FBa0IsQ0FBQyxNQUFNLEVBQUUsRUFDM0IsNkJBQWEsQ0FBQyxNQUFNLEVBQUUsRUFDdEIsaUNBQWUsQ0FBQyxNQUFNLEVBQUUsRUFDeEIsdUNBQWtCLENBQUMsTUFBTSxFQUFFLEVBQzNCLHlDQUFtQixDQUFDLE1BQU0sRUFBRSxFQUM1QixJQUFJLEVBQ0osQ0FBQyxFQUNELENBQUMsRUFDRCxDQUFDLEVBQ0QsSUFBSSxJQUFJLEVBQUUsRUFDVixFQUFFLEVBQ0YsSUFBSSxFQUNKLElBQUksQ0FDTCxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBN0RELGdDQTZEQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGVwYXRyXFxwcm9qZWN0c1xcRXhjaGFuZ2VOZXN0LUJhY2tlbmRcXHRlc3RzXFxDb250ZXh0c1xcUElFXFxVc2Vyc1xcZG9tYWluXFxVc2VyTW90aGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWF0ZVVzZXJSZXF1ZXN0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9hcHBsaWNhdGlvbi9SZXF1ZXN0L0NyZWF0ZVVzZXJSZXF1ZXN0J1xyXG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9kb21haW4vVXNlcidcclxuaW1wb3J0IHsgVXNlcklkIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9TaGFyZWQvZG9tYWluL1VzZXJzL1VzZXJJZCc7XHJcbmltcG9ydCB7IFVzZXJGaXJzdE5hbWUgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zcmMvQ29udGV4dHMvUElFL1VzZXJzL2RvbWFpbi9Vc2VyRmlyc3ROYW1lJztcclxuaW1wb3J0IHsgVXNlckxhc3ROYW1lIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9kb21haW4vVXNlckxhc3ROYW1lJztcclxuaW1wb3J0IHsgVXNlck5JQyB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9Db250ZXh0cy9QSUUvVXNlcnMvZG9tYWluL1VzZXJOSUMnO1xyXG5pbXBvcnQgeyBVc2VyRW1haWwgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zcmMvQ29udGV4dHMvUElFL1VzZXJzL2RvbWFpbi9Vc2VyRW1haWwnO1xyXG5pbXBvcnQgeyBVc2VyQmlydGhEYXRlIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9kb21haW4vVXNlckJpcnRoRGF0ZSc7XHJcbmltcG9ydCB7IFVzZXJJbWFnZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9Db250ZXh0cy9QSUUvVXNlcnMvZG9tYWluL1VzZXJJbWFnZSc7XHJcbmltcG9ydCB7IFVzZXJJZE1vdGhlciB9IGZyb20gJy4uLy4uL1NoYXJlZC9kb21haW4vVXNlcnMvVXNlcklkTW90aGVyJ1xyXG5pbXBvcnQgeyBVc2VyRmlyc3ROYW1lTW90aGVyIH0gZnJvbSAnLi9Vc2VyRmlyc3ROYW1lTW90aGVyJztcclxuaW1wb3J0IHsgVXNlckxhc3ROYW1lTW90aGVyIH0gZnJvbSAnLi9Vc2VyTGFzdE5hbWVNb3RoZXInO1xyXG5pbXBvcnQgeyBVc2VyTklDTW90aGVyIH0gZnJvbSAnLi9Vc2VyTklDTW90aGVyJztcclxuaW1wb3J0IHsgVXNlckVtYWlsTW90aGVyIH0gZnJvbSAnLi9Vc2VyRW1haWxNb3RoZXInO1xyXG5pbXBvcnQgeyBVc2VyQmlydGhEYXRlTW90aGVyIH0gZnJvbSAnLi9Vc2VyQmlydGhEYXRlTW90aGVyJztcclxuaW1wb3J0IHsgVXNlclBhc3N3b3JkIH0gZnJvbSAnc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9kb21haW4vVXNlclBhc3N3b3JkJztcclxuaW1wb3J0IHsgVXNlclBhc3N3b3JkTW90aGVyIH0gZnJvbSAnLi9Vc2VyUGFzc3dvcmRNb3RoZXInO1xyXG5cclxuZXhwb3J0IGNsYXNzIFVzZXJNb3RoZXIge1xyXG4gIHN0YXRpYyBjcmVhdGUoXHJcbiAgICBpZDogVXNlcklkLFxyXG4gICAgZmlyc3ROYW1lOiBVc2VyRmlyc3ROYW1lLFxyXG4gICAgbGFzdE5hbWU6IFVzZXJMYXN0TmFtZSxcclxuICAgIG5pYzogVXNlck5JQyxcclxuICAgIGVtYWlsOiBVc2VyRW1haWwsXHJcbiAgICBwYXNzd29yZDogVXNlclBhc3N3b3JkLFxyXG4gICAgYmlydGhEYXRlOiBVc2VyQmlydGhEYXRlLFxyXG4gICAgdXNlckltYWdlOiBVc2VySW1hZ2UgfCBudWxsLFxyXG4gICAgaWRSb2xlOiBudW1iZXIsXHJcbiAgICBpZFVzZXJTdGF0dXM6IG51bWJlcixcclxuICAgIGlkQ291bnRyeTogbnVtYmVyLFxyXG4gICAgY3JlYXRlZE9uOiBEYXRlLFxyXG4gICAgY3JlYXRlZEJ5OiBVc2VySWQsXHJcbiAgICBsYXN0TW9kaWZpZWRPbjogRGF0ZSB8IG51bGwsXHJcbiAgICBsYXN0TW9kaWZpZWRCeTogbnVtYmVyIHwgbnVsbCk6IFVzZXIge1xyXG4gICAgcmV0dXJuIG5ldyBVc2VyKGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBuaWMsIGVtYWlsLCBwYXNzd29yZCwgYmlydGhEYXRlLCB1c2VySW1hZ2UsIGlkUm9sZSwgaWRVc2VyU3RhdHVzLCBpZENvdW50cnksIGNyZWF0ZWRPbiwgY3JlYXRlZEJ5LCBsYXN0TW9kaWZpZWRPbiwgbGFzdE1vZGlmaWVkQnkpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGZyb21SZXF1ZXN0KHJlcXVlc3Q6IENyZWF0ZVVzZXJSZXF1ZXN0KTogVXNlciB7XHJcbiAgICByZXR1cm4gdGhpcy5jcmVhdGUoXHJcbiAgICAgIFVzZXJJZE1vdGhlci5jcmVhdGUocmVxdWVzdC5pZCksXHJcbiAgICAgIFVzZXJGaXJzdE5hbWVNb3RoZXIuY3JlYXRlKHJlcXVlc3QuZmlyc3ROYW1lKSxcclxuICAgICAgVXNlckxhc3ROYW1lTW90aGVyLmNyZWF0ZShyZXF1ZXN0Lmxhc3ROYW1lKSxcclxuICAgICAgVXNlck5JQ01vdGhlci5jcmVhdGUocmVxdWVzdC5uaWMpLFxyXG4gICAgICBVc2VyRW1haWxNb3RoZXIuY3JlYXRlKHJlcXVlc3QuZW1haWwpLFxyXG4gICAgICBVc2VyUGFzc3dvcmRNb3RoZXIuY3JlYXRlKHJlcXVlc3QucGFzc3dvcmQpLFxyXG4gICAgICBVc2VyQmlydGhEYXRlTW90aGVyLmNyZWF0ZShyZXF1ZXN0LmJpcnRoRGF0ZSksXHJcbiAgICAgIHJlcXVlc3QuaW1hZ2UgIT09IG51bGwgPyBuZXcgVXNlckltYWdlKHJlcXVlc3QuaW1hZ2UpIDogbnVsbCxcclxuICAgICAgcmVxdWVzdC5pZFJvbGUsXHJcbiAgICAgIHJlcXVlc3QuaWRVc2VyU3RhdHVzLFxyXG4gICAgICByZXF1ZXN0LmlkQ291bnRyeSxcclxuICAgICAgcmVxdWVzdC5jcmVhdGVkT24sXHJcbiAgICAgIFVzZXJJZE1vdGhlci5jcmVhdGUocmVxdWVzdC5jcmVhdGVkQnkpLFxyXG4gICAgICByZXF1ZXN0Lmxhc3RNb2RpZmllZE9uLFxyXG4gICAgICByZXF1ZXN0Lmxhc3RNb2RpZmllZEJ5XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHJhbmRvbSgpOiBVc2VyIHtcclxuICAgIGxldCBpZCA9IFVzZXJJZE1vdGhlci5yYW5kb20oKVxyXG5cclxuICAgIHJldHVybiB0aGlzLmNyZWF0ZShcclxuICAgICAgaWQsXHJcbiAgICAgIFVzZXJGaXJzdE5hbWVNb3RoZXIucmFuZG9tKCksXHJcbiAgICAgIFVzZXJMYXN0TmFtZU1vdGhlci5yYW5kb20oKSxcclxuICAgICAgVXNlck5JQ01vdGhlci5yYW5kb20oKSxcclxuICAgICAgVXNlckVtYWlsTW90aGVyLnJhbmRvbSgpLFxyXG4gICAgICBVc2VyUGFzc3dvcmRNb3RoZXIucmFuZG9tKCksXHJcbiAgICAgIFVzZXJCaXJ0aERhdGVNb3RoZXIucmFuZG9tKCksXHJcbiAgICAgIG51bGwsXHJcbiAgICAgIDQsXHJcbiAgICAgIDEsXHJcbiAgICAgIDEsXHJcbiAgICAgIG5ldyBEYXRlKCksXHJcbiAgICAgIGlkLFxyXG4gICAgICBudWxsLFxyXG4gICAgICBudWxsXHJcbiAgICApO1xyXG4gIH1cclxufSJdLCJ2ZXJzaW9uIjozfQ==