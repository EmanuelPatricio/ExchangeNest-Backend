{"file":"C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\apps\\pie\\controllers\\Users\\UserPostController.ts","mappings":";;;;;;;;;;;;;;;AACA,8DAAqC;AAwBrC,MAAa,kBAAkB;IAC7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE1C,GAAG,CAAC,GAAoB,EAAE,GAAa;;YAC3C,IAAI;gBACF,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;gBAEhL,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;gBAElM,GAAG,CAAC,MAAM,CAAC,qBAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;aACvC;YAAC,OAAO,KAAK,EAAE;gBACd,GAAG,CAAC,MAAM,CAAC,qBAAU,CAAC,qBAAqB,CAAC,CAAC,IAAI,EAAE,CAAC;aACrD;QACH,CAAC;KAAA;CACF;AAdD,gDAcC","names":[],"sources":["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\apps\\pie\\controllers\\Users\\UserPostController.ts"],"sourcesContent":["import { Request, Response } from 'express';\r\nimport httpStatus from 'http-status';\r\nimport { UserCreator } from '../../../../Contexts/PIE/Users/application/UserCreator';\r\nimport { Controller } from '../Controller';\r\n\r\ntype UserPostRequest = Request & {\r\n  body: {\r\n    id: number,\r\n    firstName: string,\r\n    lastName: string,\r\n    nic: string,\r\n    email: string,\r\n    password: string,\r\n    birthDate: Date,\r\n    userImage: string | null,\r\n    idRole: number,\r\n    idUserStatus: number,\r\n    idCountry: number,\r\n    createdOn: Date,\r\n    createdBy: number,\r\n    lastModifiedOn: Date | null,\r\n    lastModifiedBy: number | null\r\n  }\r\n}\r\n\r\nexport class UserPostController implements Controller {\r\n  constructor(private userCreator: UserCreator) {}\r\n\r\n  async run(req: UserPostRequest, res: Response) {\r\n    try {\r\n      const { id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy } = req.body;\r\n\r\n      await this.userCreator.run({ id, firstName, lastName, nic, email, password, birthDate, image: userImage, idRole, idUserStatus, idCountry, createdOn, createdBy, lastModifiedOn, lastModifiedBy });\r\n      \r\n      res.status(httpStatus.CREATED).send();\r\n    } catch (error) {\r\n      res.status(httpStatus.INTERNAL_SERVER_ERROR).send();\r\n    }\r\n  }\r\n}"],"version":3}