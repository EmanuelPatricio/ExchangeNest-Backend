{"file":"C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\User.ts","mappings":"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","names":[],"sources":["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\PIE\\Users\\domain\\User.ts"],"sourcesContent":["import { AggregateRoot } from \"../../../Shared/domain/AggregateRoot\"\r\nimport { BaseEntity } from \"../../Shared/domain/BaseEntity\"\r\nimport { UserId } from \"../../Shared/domain/Users/UserId\"\r\nimport { UserBirthDate } from \"./UserBirthDate\"\r\nimport { UserEmail } from \"./UserEmail\"\r\nimport { UserFirstName } from \"./UserFirstName\"\r\nimport { UserImage } from \"./UserImage\"\r\nimport { UserLastName } from \"./UserLastName\"\r\nimport { UserNIC } from \"./UserNIC\"\r\nimport { UserPassword } from \"./UserPassword\"\r\n\r\nexport class User extends AggregateRoot implements BaseEntity {\r\n  readonly id: UserId\r\n  readonly firstName: UserFirstName\r\n  readonly lastName: UserLastName\r\n  readonly nic: UserNIC\r\n  readonly email: UserEmail\r\n  readonly password: UserPassword\r\n  readonly birthDate: UserBirthDate\r\n  readonly userImage: UserImage | null\r\n  readonly idRole: number\r\n  readonly idUserStatus: number\r\n  readonly idCountry: number\r\n  readonly createdOn: Date\r\n  readonly createdBy: UserId\r\n  readonly lastModifiedOn: Date | null\r\n  readonly lastModifiedBy: number | null\r\n\r\n  constructor(id: UserId, firstName: UserFirstName, lastName: UserLastName, nic: UserNIC, email: UserEmail, password: UserPassword, birthDate: UserBirthDate, userImage: UserImage | null, idRole: number, idUserStatus: number, idCountry: number, createdOn: Date, createdBy: UserId, lastModifiedOn: Date | null, lastModifiedBy: number | null) {\r\n    super()\r\n    this.id = id\r\n    this.firstName = firstName\r\n    this.lastName = lastName\r\n    this.nic = nic\r\n    this.email = email\r\n    this.password = password\r\n    this.birthDate = birthDate\r\n    this.userImage = userImage\r\n    this.idRole = idRole\r\n    this.idUserStatus = idUserStatus\r\n    this.idCountry = idCountry\r\n    this.createdOn = createdOn\r\n    this.createdBy = createdBy\r\n    this.lastModifiedOn = lastModifiedOn\r\n    this.lastModifiedBy = lastModifiedBy\r\n  }\r\n\r\n  static fromPrimitives(plainData: { id: number; firstName: string; lastName: string, nic: string, email: string, password: string, birthDate: Date, image: string | null, role: number, status: number, country: number, createdOn: Date, createdBy: number, lastModifiedOn: Date | null, lastModifiedBy: number | null }): User {\r\n    return new User(\r\n      new UserId(plainData.id),\r\n      new UserFirstName(plainData.firstName),\r\n      new UserLastName(plainData.lastName),\r\n      new UserNIC(plainData.nic),\r\n      new UserEmail(plainData.email),\r\n      new UserPassword(plainData.password),\r\n      new UserBirthDate(plainData.birthDate),\r\n      plainData.image !== null ? new UserImage(plainData.image) : null,\r\n      plainData.role,\r\n      plainData.status,\r\n      plainData.country,\r\n      plainData.createdOn,\r\n      new UserId(plainData.createdBy),\r\n      plainData.lastModifiedOn,\r\n      plainData.lastModifiedBy\r\n    );\r\n  }\r\n\r\n  toPrimitives(): any {\r\n    return {\r\n      id: this.id.value,\r\n      firstName: this.firstName.value,\r\n      lastName: this.lastName.value,\r\n      nic: this.nic.value,\r\n      email: this.email.value,\r\n      password: this.password.value,\r\n      birthDate: this.birthDate.value,\r\n      userImage: this.userImage?.value || null,\r\n      idRole: this.idRole,\r\n      idUserStatus: this.idUserStatus,\r\n      idCountry: this.idCountry,\r\n      createdOn: this.createdOn,\r\n      createdBy: this.createdBy,\r\n      lastModifiedOn: this.lastModifiedOn || null,\r\n      lastModifiedBy: this.lastModifiedBy || null\r\n    };\r\n  }\r\n}"],"version":3}