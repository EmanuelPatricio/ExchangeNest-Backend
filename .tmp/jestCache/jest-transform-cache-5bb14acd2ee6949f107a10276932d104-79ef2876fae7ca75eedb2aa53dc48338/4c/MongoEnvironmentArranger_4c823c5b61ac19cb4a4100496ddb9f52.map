{"file":"C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\infrastructure\\mongo\\MongoEnvironmentArranger.ts","mappings":";;;;;;;;;;;;AACA,yEAAsE;AAEtE,MAAa,wBAAyB,SAAQ,yCAAmB;IAC/D,YAAoB,OAA6B;QAC/C,KAAK,EAAE,CAAC;QADU,YAAO,GAAP,OAAO,CAAsB;IAEjD,CAAC;IAEY,OAAO;;YAClB,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC;KAAA;IAEe,aAAa;;YAC3B,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;YAC7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;YAEnC,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;gBACpC,MAAM,MAAM,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aACzD;QACH,CAAC;KAAA;IAEa,WAAW;;YACvB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;YACnC,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;YAE/F,OAAO,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC;KAAA;IAES,MAAM;QACd,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEY,KAAK;;YAChB,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC;KAAA;CACF;AAhCD,4DAgCC","names":[],"sources":["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\tests\\Contexts\\Shared\\infrastructure\\mongo\\MongoEnvironmentArranger.ts"],"sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport { EnvironmentArranger } from '../arranger/EnvironmentArranger';\r\n\r\nexport class MongoEnvironmentArranger extends EnvironmentArranger {\r\n  constructor(private _client: Promise<MongoClient>) {\r\n    super();\r\n  }\r\n\r\n  public async arrange(): Promise<void> {\r\n    await this.cleanDatabase();\r\n  }\r\n\r\n  protected async cleanDatabase(): Promise<void> {\r\n    const collections = await this.collections();\r\n    const client = await this.client();\r\n\r\n    for (const collection of collections) {\r\n      await client.db().collection(collection).deleteMany({});\r\n    }\r\n  }\r\n\r\n  private async collections(): Promise<string[]> {\r\n    const client = await this.client();\r\n    const collections = await client.db().listCollections(undefined, { nameOnly: true }).toArray();\r\n\r\n    return collections.map(collection => collection.name);\r\n  }\r\n\r\n  protected client(): Promise<MongoClient> {\r\n    return this._client;\r\n  }\r\n\r\n  public async close(): Promise<void> {\r\n    return (await this.client()).close();\r\n  }\r\n}"],"version":3}