{"file":"C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\infrastructure\\persistence\\mongo\\MongoClientFactory.ts","mappings":";;;;;;;;;;;;AAAA,qCAAwD;AAGxD,MAAa,kBAAkB;IAG7B,MAAM,CAAO,YAAY,CAAC,WAAmB,EAAE,MAAmB;;YAChE,IAAI,MAAM,GAAG,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAEvD,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,GAAG,MAAM,kBAAkB,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;gBAEjE,kBAAkB,CAAC,cAAc,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;aACxD;YAED,OAAO,MAAM,CAAC;QAChB,CAAC;KAAA;IAEO,MAAM,CAAC,SAAS,CAAC,WAAmB;QAC1C,OAAO,kBAAkB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAEO,MAAM,CAAO,sBAAsB,CAAC,MAAmB;;YAC7D,MAAM,MAAM,GAAG,IAAI,qBAAW,CAAC,MAAM,CAAC,GAAG,EAAE;gBACzC,SAAS,EAAE;oBACT,OAAO,EAAE,0BAAgB,CAAC,EAAE;oBAC5B,MAAM,EAAE,IAAI;oBACZ,iBAAiB,EAAE,IAAI;iBACxB;gBACD,eAAe,EAAE,IAAI;aACtB,CAAC,CAAC;YAEH,MAAM,MAAM,CAAC,OAAO,EAAE,CAAA;YAEtB,OAAO,MAAM,CAAC;QAChB,CAAC;KAAA;IAEO,MAAM,CAAC,cAAc,CAAC,MAAmB,EAAE,WAAmB;QACpE,kBAAkB,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;IACnD,CAAC;;AApCH,gDAqCC;AApCgB,0BAAO,GAAmC,EAAE,CAAC","names":[],"sources":["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\infrastructure\\persistence\\mongo\\MongoClientFactory.ts"],"sourcesContent":["import { MongoClient, ServerApiVersion } from 'mongodb';\r\nimport MongoConfig from './MongoConfig';\r\n\r\nexport class MongoClientFactory {\r\n  private static clients: { [key: string]: MongoClient } = {};\r\n\r\n  static async createClient(contextName: string, config: MongoConfig): Promise<MongoClient> {\r\n    let client = MongoClientFactory.getClient(contextName);\r\n\r\n    if (!client) {\r\n      client = await MongoClientFactory.createAndConnectClient(config);\r\n\r\n      MongoClientFactory.registerClient(client, contextName);\r\n    }\r\n\r\n    return client;\r\n  }\r\n\r\n  private static getClient(contextName: string): MongoClient | null {\r\n    return MongoClientFactory.clients[contextName];\r\n  }\r\n\r\n  private static async createAndConnectClient(config: MongoConfig): Promise<MongoClient> {\r\n    const client = new MongoClient(config.url, {\r\n      serverApi: {\r\n        version: ServerApiVersion.v1,\r\n        strict: true,\r\n        deprecationErrors: true,\r\n      },\r\n      ignoreUndefined: true\r\n    });\r\n\r\n    await client.connect()\r\n\r\n    return client;\r\n  }\r\n\r\n  private static registerClient(client: MongoClient, contextName: string): void {\r\n    MongoClientFactory.clients[contextName] = client;\r\n  }\r\n}"],"version":3}