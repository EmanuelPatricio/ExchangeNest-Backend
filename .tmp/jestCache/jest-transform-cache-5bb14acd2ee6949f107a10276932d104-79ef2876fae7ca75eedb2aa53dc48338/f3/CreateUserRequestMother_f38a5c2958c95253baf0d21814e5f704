5b62535ee2ca5b6e5964578024a88ed5
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateUserRequestMother = void 0;
const UserIdMother_1 = require("../../Shared/domain/Users/UserIdMother");
const UserFirstNameMother_1 = require("../domain/UserFirstNameMother");
const UserLastNameMother_1 = require("../domain/UserLastNameMother");
const UserNICMother_1 = require("../domain/UserNICMother");
const UserEmailMother_1 = require("../domain/UserEmailMother");
const UserBirthDateMother_1 = require("../domain/UserBirthDateMother");
const UserPasswordMother_1 = require("../domain/UserPasswordMother");
class CreateUserRequestMother {
    static create(id, firstName, lastName, nic, email, password, birthDate, userImage, idRole, idUserStatus, idCountry, createdOn, lastModifiedOn, lastModifiedBy) {
        return {
            id: id.value,
            firstName: firstName.value,
            lastName: lastName.value,
            nic: nic.value,
            email: email.value,
            password: password.value,
            birthDate: birthDate.value,
            image: userImage === null ? null : userImage.value,
            idRole: idRole,
            idUserStatus: idUserStatus,
            idCountry: idCountry,
            createdOn: createdOn,
            createdBy: id.value,
            lastModifiedOn: lastModifiedOn,
            lastModifiedBy: lastModifiedBy
        };
    }
    static random() {
        let id = UserIdMother_1.UserIdMother.random();
        return this.create(id, UserFirstNameMother_1.UserFirstNameMother.random(), UserLastNameMother_1.UserLastNameMother.random(), UserNICMother_1.UserNICMother.random(), UserEmailMother_1.UserEmailMother.random(), UserPasswordMother_1.UserPasswordMother.random(), UserBirthDateMother_1.UserBirthDateMother.random(), null, 4, 1, 1, new Date(), null, null);
    }
    static invalidRequest() {
        let id = UserIdMother_1.UserIdMother.random().value;
        return {
            id: id,
            firstName: UserFirstNameMother_1.UserFirstNameMother.invalidName(),
            lastName: UserLastNameMother_1.UserLastNameMother.random().value,
            nic: UserNICMother_1.UserNICMother.random().value,
            email: UserEmailMother_1.UserEmailMother.random().value,
            password: UserPasswordMother_1.UserPasswordMother.random().value,
            birthDate: UserBirthDateMother_1.UserBirthDateMother.random().value,
            image: null,
            idRole: 4,
            idUserStatus: 1,
            idCountry: 1,
            createdOn: new Date(),
            createdBy: id,
            lastModifiedOn: null,
            lastModifiedBy: null
        };
    }
}
exports.CreateUserRequestMother = CreateUserRequestMother;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxlcGF0clxccHJvamVjdHNcXEV4Y2hhbmdlTmVzdC1CYWNrZW5kXFx0ZXN0c1xcQ29udGV4dHNcXFBJRVxcVXNlcnNcXGFwcGxpY2F0aW9uXFxDcmVhdGVVc2VyUmVxdWVzdE1vdGhlci50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSx5RUFBcUU7QUFTckUsdUVBQW9FO0FBQ3BFLHFFQUFrRTtBQUNsRSwyREFBd0Q7QUFDeEQsK0RBQTREO0FBQzVELHVFQUFvRTtBQUVwRSxxRUFBa0U7QUFFbEUsTUFBYSx1QkFBdUI7SUFDbEMsTUFBTSxDQUFDLE1BQU0sQ0FDWCxFQUFVLEVBQ1YsU0FBd0IsRUFDeEIsUUFBc0IsRUFDdEIsR0FBWSxFQUNaLEtBQWdCLEVBQ2hCLFFBQXNCLEVBQ3RCLFNBQXdCLEVBQ3hCLFNBQTJCLEVBQzNCLE1BQWMsRUFDZCxZQUFvQixFQUNwQixTQUFpQixFQUNqQixTQUFlLEVBQ2YsY0FBb0IsRUFDcEIsY0FBb0I7UUFDcEIsT0FBTztZQUNMLEVBQUUsRUFBRSxFQUFFLENBQUMsS0FBSztZQUNaLFNBQVMsRUFBRSxTQUFTLENBQUMsS0FBSztZQUMxQixRQUFRLEVBQUUsUUFBUSxDQUFDLEtBQUs7WUFDeEIsR0FBRyxFQUFFLEdBQUcsQ0FBQyxLQUFLO1lBQ2QsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO1lBQ2xCLFFBQVEsRUFBRSxRQUFRLENBQUMsS0FBSztZQUN4QixTQUFTLEVBQUUsU0FBUyxDQUFDLEtBQUs7WUFDMUIsS0FBSyxFQUFFLFNBQVMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUs7WUFDbEQsTUFBTSxFQUFFLE1BQU07WUFDZCxZQUFZLEVBQUUsWUFBWTtZQUMxQixTQUFTLEVBQUUsU0FBUztZQUNwQixTQUFTLEVBQUUsU0FBUztZQUNwQixTQUFTLEVBQUUsRUFBRSxDQUFDLEtBQUs7WUFDbkIsY0FBYyxFQUFFLGNBQWM7WUFDOUIsY0FBYyxFQUFFLGNBQWM7U0FDL0IsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTTtRQUNYLElBQUksRUFBRSxHQUFHLDJCQUFZLENBQUMsTUFBTSxFQUFFLENBQUE7UUFDOUIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUNoQixFQUFFLEVBQ0YseUNBQW1CLENBQUMsTUFBTSxFQUFFLEVBQzVCLHVDQUFrQixDQUFDLE1BQU0sRUFBRSxFQUMzQiw2QkFBYSxDQUFDLE1BQU0sRUFBRSxFQUN0QixpQ0FBZSxDQUFDLE1BQU0sRUFBRSxFQUN4Qix1Q0FBa0IsQ0FBQyxNQUFNLEVBQUUsRUFDM0IseUNBQW1CLENBQUMsTUFBTSxFQUFFLEVBQzVCLElBQUksRUFDSixDQUFDLEVBQ0QsQ0FBQyxFQUNELENBQUMsRUFDRCxJQUFJLElBQUksRUFBRSxFQUNWLElBQUksRUFDSixJQUFJLENBQ0wsQ0FBQTtJQUNILENBQUM7SUFFRCxNQUFNLENBQUMsY0FBYztRQUNuQixJQUFJLEVBQUUsR0FBRywyQkFBWSxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQTtRQUNwQyxPQUFPO1lBQ0wsRUFBRSxFQUFFLEVBQUU7WUFDTixTQUFTLEVBQUUseUNBQW1CLENBQUMsV0FBVyxFQUFFO1lBQzVDLFFBQVEsRUFBRSx1Q0FBa0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLO1lBQzNDLEdBQUcsRUFBRSw2QkFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUs7WUFDakMsS0FBSyxFQUFFLGlDQUFlLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSztZQUNyQyxRQUFRLEVBQUUsdUNBQWtCLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSztZQUMzQyxTQUFTLEVBQUUseUNBQW1CLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSztZQUM3QyxLQUFLLEVBQUUsSUFBSTtZQUNYLE1BQU0sRUFBRSxDQUFDO1lBQ1QsWUFBWSxFQUFFLENBQUM7WUFDZixTQUFTLEVBQUUsQ0FBQztZQUNaLFNBQVMsRUFBRSxJQUFJLElBQUksRUFBRTtZQUNyQixTQUFTLEVBQUUsRUFBRTtZQUNiLGNBQWMsRUFBRSxJQUFJO1lBQ3BCLGNBQWMsRUFBRSxJQUFJO1NBQ3JCLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUEzRUQsMERBMkVDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXBhdHJcXHByb2plY3RzXFxFeGNoYW5nZU5lc3QtQmFja2VuZFxcdGVzdHNcXENvbnRleHRzXFxQSUVcXFVzZXJzXFxhcHBsaWNhdGlvblxcQ3JlYXRlVXNlclJlcXVlc3RNb3RoZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlcklkTW90aGVyIH0gZnJvbSAnLi4vLi4vU2hhcmVkL2RvbWFpbi9Vc2Vycy9Vc2VySWRNb3RoZXInXHJcbmltcG9ydCB7IENyZWF0ZVVzZXJSZXF1ZXN0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9hcHBsaWNhdGlvbi9SZXF1ZXN0L0NyZWF0ZVVzZXJSZXF1ZXN0JztcclxuaW1wb3J0IHsgVXNlcklkIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9TaGFyZWQvZG9tYWluL1VzZXJzL1VzZXJJZCc7XHJcbmltcG9ydCB7IFVzZXJGaXJzdE5hbWUgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zcmMvQ29udGV4dHMvUElFL1VzZXJzL2RvbWFpbi9Vc2VyRmlyc3ROYW1lJztcclxuaW1wb3J0IHsgVXNlckxhc3ROYW1lIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9kb21haW4vVXNlckxhc3ROYW1lJztcclxuaW1wb3J0IHsgVXNlck5JQyB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9Db250ZXh0cy9QSUUvVXNlcnMvZG9tYWluL1VzZXJOSUMnO1xyXG5pbXBvcnQgeyBVc2VyRW1haWwgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zcmMvQ29udGV4dHMvUElFL1VzZXJzL2RvbWFpbi9Vc2VyRW1haWwnO1xyXG5pbXBvcnQgeyBVc2VyQmlydGhEYXRlIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9kb21haW4vVXNlckJpcnRoRGF0ZSc7XHJcbmltcG9ydCB7IFVzZXJJbWFnZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9Db250ZXh0cy9QSUUvVXNlcnMvZG9tYWluL1VzZXJJbWFnZSc7XHJcbmltcG9ydCB7IFVzZXJGaXJzdE5hbWVNb3RoZXIgfSBmcm9tICcuLi9kb21haW4vVXNlckZpcnN0TmFtZU1vdGhlcic7XHJcbmltcG9ydCB7IFVzZXJMYXN0TmFtZU1vdGhlciB9IGZyb20gJy4uL2RvbWFpbi9Vc2VyTGFzdE5hbWVNb3RoZXInO1xyXG5pbXBvcnQgeyBVc2VyTklDTW90aGVyIH0gZnJvbSAnLi4vZG9tYWluL1VzZXJOSUNNb3RoZXInO1xyXG5pbXBvcnQgeyBVc2VyRW1haWxNb3RoZXIgfSBmcm9tICcuLi9kb21haW4vVXNlckVtYWlsTW90aGVyJztcclxuaW1wb3J0IHsgVXNlckJpcnRoRGF0ZU1vdGhlciB9IGZyb20gJy4uL2RvbWFpbi9Vc2VyQmlydGhEYXRlTW90aGVyJztcclxuaW1wb3J0IHsgVXNlclBhc3N3b3JkIH0gZnJvbSAnc3JjL0NvbnRleHRzL1BJRS9Vc2Vycy9kb21haW4vVXNlclBhc3N3b3JkJztcclxuaW1wb3J0IHsgVXNlclBhc3N3b3JkTW90aGVyIH0gZnJvbSAnLi4vZG9tYWluL1VzZXJQYXNzd29yZE1vdGhlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgQ3JlYXRlVXNlclJlcXVlc3RNb3RoZXIge1xyXG4gIHN0YXRpYyBjcmVhdGUoXHJcbiAgICBpZDogVXNlcklkLFxyXG4gICAgZmlyc3ROYW1lOiBVc2VyRmlyc3ROYW1lLFxyXG4gICAgbGFzdE5hbWU6IFVzZXJMYXN0TmFtZSxcclxuICAgIG5pYzogVXNlck5JQyxcclxuICAgIGVtYWlsOiBVc2VyRW1haWwsXHJcbiAgICBwYXNzd29yZDogVXNlclBhc3N3b3JkLFxyXG4gICAgYmlydGhEYXRlOiBVc2VyQmlydGhEYXRlLFxyXG4gICAgdXNlckltYWdlOiBVc2VySW1hZ2UgfCBudWxsLFxyXG4gICAgaWRSb2xlOiBudW1iZXIsXHJcbiAgICBpZFVzZXJTdGF0dXM6IG51bWJlcixcclxuICAgIGlkQ291bnRyeTogbnVtYmVyLFxyXG4gICAgY3JlYXRlZE9uOiBEYXRlLFxyXG4gICAgbGFzdE1vZGlmaWVkT246IG51bGwsXHJcbiAgICBsYXN0TW9kaWZpZWRCeTogbnVsbCk6IENyZWF0ZVVzZXJSZXF1ZXN0IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlkOiBpZC52YWx1ZSxcclxuICAgICAgZmlyc3ROYW1lOiBmaXJzdE5hbWUudmFsdWUsXHJcbiAgICAgIGxhc3ROYW1lOiBsYXN0TmFtZS52YWx1ZSxcclxuICAgICAgbmljOiBuaWMudmFsdWUsXHJcbiAgICAgIGVtYWlsOiBlbWFpbC52YWx1ZSxcclxuICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLnZhbHVlLFxyXG4gICAgICBiaXJ0aERhdGU6IGJpcnRoRGF0ZS52YWx1ZSxcclxuICAgICAgaW1hZ2U6IHVzZXJJbWFnZSA9PT0gbnVsbCA/IG51bGwgOiB1c2VySW1hZ2UudmFsdWUsXHJcbiAgICAgIGlkUm9sZTogaWRSb2xlLFxyXG4gICAgICBpZFVzZXJTdGF0dXM6IGlkVXNlclN0YXR1cyxcclxuICAgICAgaWRDb3VudHJ5OiBpZENvdW50cnksXHJcbiAgICAgIGNyZWF0ZWRPbjogY3JlYXRlZE9uLFxyXG4gICAgICBjcmVhdGVkQnk6IGlkLnZhbHVlLFxyXG4gICAgICBsYXN0TW9kaWZpZWRPbjogbGFzdE1vZGlmaWVkT24sXHJcbiAgICAgIGxhc3RNb2RpZmllZEJ5OiBsYXN0TW9kaWZpZWRCeVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyByYW5kb20oKTogQ3JlYXRlVXNlclJlcXVlc3Qge1xyXG4gICAgbGV0IGlkID0gVXNlcklkTW90aGVyLnJhbmRvbSgpXHJcbiAgICByZXR1cm4gdGhpcy5jcmVhdGUoXHJcbiAgICAgIGlkLFxyXG4gICAgICBVc2VyRmlyc3ROYW1lTW90aGVyLnJhbmRvbSgpLFxyXG4gICAgICBVc2VyTGFzdE5hbWVNb3RoZXIucmFuZG9tKCksXHJcbiAgICAgIFVzZXJOSUNNb3RoZXIucmFuZG9tKCksXHJcbiAgICAgIFVzZXJFbWFpbE1vdGhlci5yYW5kb20oKSxcclxuICAgICAgVXNlclBhc3N3b3JkTW90aGVyLnJhbmRvbSgpLFxyXG4gICAgICBVc2VyQmlydGhEYXRlTW90aGVyLnJhbmRvbSgpLFxyXG4gICAgICBudWxsLFxyXG4gICAgICA0LFxyXG4gICAgICAxLFxyXG4gICAgICAxLFxyXG4gICAgICBuZXcgRGF0ZSgpLFxyXG4gICAgICBudWxsLFxyXG4gICAgICBudWxsXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICBzdGF0aWMgaW52YWxpZFJlcXVlc3QoKTogQ3JlYXRlVXNlclJlcXVlc3Qge1xyXG4gICAgbGV0IGlkID0gVXNlcklkTW90aGVyLnJhbmRvbSgpLnZhbHVlXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpZDogaWQsXHJcbiAgICAgIGZpcnN0TmFtZTogVXNlckZpcnN0TmFtZU1vdGhlci5pbnZhbGlkTmFtZSgpLFxyXG4gICAgICBsYXN0TmFtZTogVXNlckxhc3ROYW1lTW90aGVyLnJhbmRvbSgpLnZhbHVlLFxyXG4gICAgICBuaWM6IFVzZXJOSUNNb3RoZXIucmFuZG9tKCkudmFsdWUsXHJcbiAgICAgIGVtYWlsOiBVc2VyRW1haWxNb3RoZXIucmFuZG9tKCkudmFsdWUsXHJcbiAgICAgIHBhc3N3b3JkOiBVc2VyUGFzc3dvcmRNb3RoZXIucmFuZG9tKCkudmFsdWUsXHJcbiAgICAgIGJpcnRoRGF0ZTogVXNlckJpcnRoRGF0ZU1vdGhlci5yYW5kb20oKS52YWx1ZSxcclxuICAgICAgaW1hZ2U6IG51bGwsXHJcbiAgICAgIGlkUm9sZTogNCxcclxuICAgICAgaWRVc2VyU3RhdHVzOiAxLFxyXG4gICAgICBpZENvdW50cnk6IDEsXHJcbiAgICAgIGNyZWF0ZWRPbjogbmV3IERhdGUoKSxcclxuICAgICAgY3JlYXRlZEJ5OiBpZCxcclxuICAgICAgbGFzdE1vZGlmaWVkT246IG51bGwsXHJcbiAgICAgIGxhc3RNb2RpZmllZEJ5OiBudWxsXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG5cclxuIFxyXG4gXHJcbiBcclxuIFxyXG4gXHJcbiBcclxuIFxyXG4gXHJcbiBcclxuIFxyXG4gXHJcbiBcclxuIFxyXG4iXSwidmVyc2lvbiI6M30=