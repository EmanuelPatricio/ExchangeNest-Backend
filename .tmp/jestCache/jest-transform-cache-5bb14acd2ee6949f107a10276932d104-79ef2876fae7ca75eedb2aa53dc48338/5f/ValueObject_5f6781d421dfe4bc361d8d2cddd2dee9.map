{"file":"C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\value-object\\ValueObject.ts","mappings":";;;AAAA,iEAA8D;AAI9D,MAAsB,WAAW;IAG/B,YAAY,KAAQ;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAEO,oBAAoB,CAAC,KAAQ;QACnC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,MAAM,IAAI,2CAAoB,CAAC,uBAAuB,CAAC,CAAC;SACzD;IACH,CAAC;IAED,MAAM,CAAC,KAAqB;QAC1B,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC;IACxF,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;CACF;AArBD,kCAqBC","names":[],"sources":["C:\\Users\\epatr\\projects\\ExchangeNest-Backend\\src\\Contexts\\Shared\\domain\\value-object\\ValueObject.ts"],"sourcesContent":["import { InvalidArgumentError } from \"./InvalidArgumentError\";\r\n\r\ntype Primitives = String | string | Number | number | Boolean | boolean | Date;\r\n\r\nexport abstract class ValueObject<T extends Primitives> {\r\n  readonly value: T;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n    this.ensureValueIsDefined(value);\r\n  }\r\n\r\n  private ensureValueIsDefined(value: T): void {\r\n    if (value === null || value === undefined) {\r\n      throw new InvalidArgumentError('Value must be defined');\r\n    }\r\n  }\r\n\r\n  equals(other: ValueObject<T>): boolean {\r\n    return other.constructor.name === this.constructor.name && other.value === this.value;\r\n  }\r\n\r\n  toString(): string  {\r\n      return this.value.toString();\r\n  }\r\n}"],"version":3}