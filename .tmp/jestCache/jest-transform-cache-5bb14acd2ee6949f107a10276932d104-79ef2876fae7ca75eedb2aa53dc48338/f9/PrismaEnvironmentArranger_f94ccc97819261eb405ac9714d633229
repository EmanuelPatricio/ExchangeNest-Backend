c7253b588755a64072e49c148b55bf02
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrismaEnvironmentArranger = void 0;
const PrismaClientFactory_1 = require("../../../../../src/Contexts/Shared/infrastructure/persistence/prisma/PrismaClientFactory");
const EnvironmentArranger_1 = require("../arranger/EnvironmentArranger");
class PrismaEnvironmentArranger extends EnvironmentArranger_1.EnvironmentArranger {
    arrange() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.cleanDatabase();
        });
    }
    cleanDatabase() {
        return __awaiter(this, void 0, void 0, function* () {
            const tableNames = yield PrismaClientFactory_1.prisma.$queryRaw `SELECT table_name
                                                        FROM information_schema.tables
                                                        WHERE table_schema='public'
                                                        AND table_type='BASE TABLE'
                                                        AND table_name NOT LIKE '\_%'`;
            for (const tableName of tableNames) {
                yield PrismaClientFactory_1.prisma.$queryRaw `TRUNCATE TABLE ${tableName}`;
            }
        });
    }
    close() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield PrismaClientFactory_1.prisma.$disconnect();
        });
    }
}
exports.PrismaEnvironmentArranger = PrismaEnvironmentArranger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxlcGF0clxccHJvamVjdHNcXEV4Y2hhbmdlTmVzdC1CYWNrZW5kXFx0ZXN0c1xcQ29udGV4dHNcXFNoYXJlZFxcaW5mcmFzdHJ1Y3R1cmVcXHByaXNtYVxcUHJpc21hRW52aXJvbm1lbnRBcnJhbmdlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxrSUFBa0g7QUFDbEgseUVBQXNFO0FBRXRFLE1BQWEseUJBQTBCLFNBQVEseUNBQW1CO0lBQ25ELE9BQU87O1lBQ2xCLE1BQU0sSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzdCLENBQUM7S0FBQTtJQUVlLGFBQWE7O1lBQzNCLE1BQU0sVUFBVSxHQUFHLE1BQU0sNEJBQU0sQ0FBQyxTQUFTLENBQVU7Ozs7c0ZBSStCLENBQUE7WUFFbEYsS0FBSyxNQUFNLFNBQVMsSUFBSSxVQUFVLEVBQUU7Z0JBQ2xDLE1BQU0sNEJBQU0sQ0FBQyxTQUFTLENBQUEsa0JBQWtCLFNBQVMsRUFBRSxDQUFBO2FBQ3BEO1FBQ0gsQ0FBQztLQUFBO0lBRVksS0FBSzs7WUFDaEIsT0FBTyxNQUFNLDRCQUFNLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDcEMsQ0FBQztLQUFBO0NBQ0Y7QUFwQkQsOERBb0JDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXBhdHJcXHByb2plY3RzXFxFeGNoYW5nZU5lc3QtQmFja2VuZFxcdGVzdHNcXENvbnRleHRzXFxTaGFyZWRcXGluZnJhc3RydWN0dXJlXFxwcmlzbWFcXFByaXNtYUVudmlyb25tZW50QXJyYW5nZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL0NvbnRleHRzL1NoYXJlZC9pbmZyYXN0cnVjdHVyZS9wZXJzaXN0ZW5jZS9wcmlzbWEvUHJpc21hQ2xpZW50RmFjdG9yeSc7XHJcbmltcG9ydCB7IEVudmlyb25tZW50QXJyYW5nZXIgfSBmcm9tICcuLi9hcnJhbmdlci9FbnZpcm9ubWVudEFycmFuZ2VyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBQcmlzbWFFbnZpcm9ubWVudEFycmFuZ2VyIGV4dGVuZHMgRW52aXJvbm1lbnRBcnJhbmdlciB7XHJcbiAgcHVibGljIGFzeW5jIGFycmFuZ2UoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBhd2FpdCB0aGlzLmNsZWFuRGF0YWJhc2UoKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBhc3luYyBjbGVhbkRhdGFiYXNlKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgY29uc3QgdGFibGVOYW1lcyA9IGF3YWl0IHByaXNtYS4kcXVlcnlSYXc8c3RyaW5nW10+YFNFTEVDVCB0YWJsZV9uYW1lXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlJPTSBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV0hFUkUgdGFibGVfc2NoZW1hPSdwdWJsaWMnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQU5EIHRhYmxlX3R5cGU9J0JBU0UgVEFCTEUnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQU5EIHRhYmxlX25hbWUgTk9UIExJS0UgJ1xcXyUnYFxyXG5cclxuICAgIGZvciAoY29uc3QgdGFibGVOYW1lIG9mIHRhYmxlTmFtZXMpIHtcclxuICAgICAgYXdhaXQgcHJpc21hLiRxdWVyeVJhd2BUUlVOQ0FURSBUQUJMRSAke3RhYmxlTmFtZX1gXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYXN5bmMgY2xvc2UoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgcHJpc21hLiRkaXNjb25uZWN0KCk7XHJcbiAgfVxyXG59Il0sInZlcnNpb24iOjN9