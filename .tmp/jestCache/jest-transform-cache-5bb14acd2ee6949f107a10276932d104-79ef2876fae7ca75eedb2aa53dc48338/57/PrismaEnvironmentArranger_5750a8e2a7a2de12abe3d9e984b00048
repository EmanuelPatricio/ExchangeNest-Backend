33cb3f20e2a36260715abe914239997a
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrismaEnvironmentArranger = void 0;
const EnvironmentArranger_1 = require("../arranger/EnvironmentArranger");
class PrismaEnvironmentArranger extends EnvironmentArranger_1.EnvironmentArranger {
    constructor(_client) {
        super();
        this._client = _client;
    }
    arrange() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.cleanDatabase();
        });
    }
    cleanDatabase() {
        return __awaiter(this, void 0, void 0, function* () {
            const client = yield this.client();
            const tableNames = yield client.$queryRaw `SELECT table_name
                                                        FROM information_schema.tables
                                                        WHERE table_schema='public'
                                                        AND table_type='BASE TABLE'
                                                        AND table_name NOT LIKE '\_%'`;
            for (const tableName of tableNames) {
                yield client.$queryRaw `TRUNCATE TABLE ${tableName}`;
            }
        });
    }
    client() {
        return this._client;
    }
    close() {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.client()).$disconnect();
        });
    }
}
exports.PrismaEnvironmentArranger = PrismaEnvironmentArranger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxlcGF0clxccHJvamVjdHNcXEV4Y2hhbmdlTmVzdC1CYWNrZW5kXFx0ZXN0c1xcQ29udGV4dHNcXFNoYXJlZFxcaW5mcmFzdHJ1Y3R1cmVcXHByaXNtYVxcUHJpc21hRW52aXJvbm1lbnRBcnJhbmdlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFDQSx5RUFBc0U7QUFFdEUsTUFBYSx5QkFBMEIsU0FBUSx5Q0FBbUI7SUFDaEUsWUFBb0IsT0FBOEI7UUFDaEQsS0FBSyxFQUFFLENBQUM7UUFEVSxZQUFPLEdBQVAsT0FBTyxDQUF1QjtJQUVsRCxDQUFDO0lBRVksT0FBTzs7WUFDbEIsTUFBTSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDN0IsQ0FBQztLQUFBO0lBRWUsYUFBYTs7WUFDM0IsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7WUFFbkMsTUFBTSxVQUFVLEdBQUcsTUFBTSxNQUFNLENBQUMsU0FBUyxDQUFVOzs7O3NGQUkrQixDQUFBO1lBRWxGLEtBQUssTUFBTSxTQUFTLElBQUksVUFBVSxFQUFFO2dCQUNsQyxNQUFNLE1BQU0sQ0FBQyxTQUFTLENBQUEsa0JBQWtCLFNBQVMsRUFBRSxDQUFBO2FBQ3BEO1FBQ0gsQ0FBQztLQUFBO0lBRVMsTUFBTTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRVksS0FBSzs7WUFDaEIsT0FBTyxDQUFDLE1BQU0sSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDN0MsQ0FBQztLQUFBO0NBQ0Y7QUE5QkQsOERBOEJDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZXBhdHJcXHByb2plY3RzXFxFeGNoYW5nZU5lc3QtQmFja2VuZFxcdGVzdHNcXENvbnRleHRzXFxTaGFyZWRcXGluZnJhc3RydWN0dXJlXFxwcmlzbWFcXFByaXNtYUVudmlyb25tZW50QXJyYW5nZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xyXG5pbXBvcnQgeyBFbnZpcm9ubWVudEFycmFuZ2VyIH0gZnJvbSAnLi4vYXJyYW5nZXIvRW52aXJvbm1lbnRBcnJhbmdlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgUHJpc21hRW52aXJvbm1lbnRBcnJhbmdlciBleHRlbmRzIEVudmlyb25tZW50QXJyYW5nZXIge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NsaWVudDogUHJvbWlzZTxQcmlzbWFDbGllbnQ+KSB7XHJcbiAgICBzdXBlcigpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFzeW5jIGFycmFuZ2UoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBhd2FpdCB0aGlzLmNsZWFuRGF0YWJhc2UoKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBhc3luYyBjbGVhbkRhdGFiYXNlKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgdGhpcy5jbGllbnQoKTtcclxuXHJcbiAgICBjb25zdCB0YWJsZU5hbWVzID0gYXdhaXQgY2xpZW50LiRxdWVyeVJhdzxzdHJpbmdbXT5gU0VMRUNUIHRhYmxlX25hbWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGUk9NIGluZm9ybWF0aW9uX3NjaGVtYS50YWJsZXNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXSEVSRSB0YWJsZV9zY2hlbWE9J3B1YmxpYydcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTkQgdGFibGVfdHlwZT0nQkFTRSBUQUJMRSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTkQgdGFibGVfbmFtZSBOT1QgTElLRSAnXFxfJSdgXHJcblxyXG4gICAgZm9yIChjb25zdCB0YWJsZU5hbWUgb2YgdGFibGVOYW1lcykge1xyXG4gICAgICBhd2FpdCBjbGllbnQuJHF1ZXJ5UmF3YFRSVU5DQVRFIFRBQkxFICR7dGFibGVOYW1lfWBcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBjbGllbnQoKTogUHJvbWlzZTxQcmlzbWFDbGllbnQ+IHtcclxuICAgIHJldHVybiB0aGlzLl9jbGllbnQ7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYXN5bmMgY2xvc2UoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICByZXR1cm4gKGF3YWl0IHRoaXMuY2xpZW50KCkpLiRkaXNjb25uZWN0KCk7XHJcbiAgfVxyXG59Il0sInZlcnNpb24iOjN9